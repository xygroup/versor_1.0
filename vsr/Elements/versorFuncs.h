/*

//  extraFunctions.h
//  vsr_static
//
//  Created by Pablo Colapinto on 8/28/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.

    Add-ons that I don't continuously auto-regenerate

*/

#ifndef vsr_static_extraFunctions_h
#define vsr_static_extraFunctions_h

#include "vsr_casts.h"

namespace vsr {

template <class A, class B>
inline A sp(const A& a, const B& b) {
  printf("sp error!\n");
  return a;
}

template <class A, class B>
inline A re(const A& a, const B& b) {
  printf("re error!\n");
  cout << a << b << endl;
  return a;
}

template <class A, class B>
inline A gp(const A& a, const B& b) {
  printf("///////////////\ngp error!\n");
  cout << a << b;
  printf("gp error!\n//////////////////\n");
  return a;
}

template <class A, class B>
inline A ip(const A& a, const B& b) {
  printf("ip error!\n");
  return a;
}

template <class A, class B>
inline A op(const A& a, const B& b) {
  printf("op error!\n");
  return a;
}

template <>
inline Rot sp(const Rot& rota, const Rot& rotb) {
  const Rot& t1 = rotb;
  const Rot& t2 = rota;
  Rot t3(t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2],
         t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1],
         t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0]);
  const Rot& t4 = rotb;
  Rot t5 = reverse(t4);
  return Rot(t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3],
             t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2],
             t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1],
             t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0]);
}

template <>
inline Mot sp(const Mot& mota, const Mot& motb) {
  const Mot& t1 = motb;
  const Mot& t2 = mota;
  Mot t3(t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2],
         t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1],
         t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0],
         t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] - t1[3] * t2[7] +
             t1[4] * t2[0] - t1[5] * t2[1] - t1[6] * t2[2] - t1[7] * t2[3],
         t1[0] * t2[5] - t1[1] * t2[4] + t1[2] * t2[7] + t1[3] * t2[6] +
             t1[4] * t2[1] + t1[5] * t2[0] - t1[6] * t2[3] + t1[7] * t2[2],
         t1[0] * t2[6] - t1[1] * t2[7] - t1[2] * t2[4] - t1[3] * t2[5] +
             t1[4] * t2[2] + t1[5] * t2[3] + t1[6] * t2[0] - t1[7] * t2[1],
         t1[0] * t2[7] + t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] +
             t1[4] * t2[3] - t1[5] * t2[2] + t1[6] * t2[1] + t1[7] * t2[0]);
  const Mot& t4 = motb;
  Mot t5 = reverse(t4);
  return Mot(t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3],
             t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2],
             t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1],
             t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0],
             t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] - t3[3] * t5[7] +
                 t3[4] * t5[0] - t3[5] * t5[1] - t3[6] * t5[2] - t3[7] * t5[3],
             t3[0] * t5[5] - t3[1] * t5[4] + t3[2] * t5[7] + t3[3] * t5[6] +
                 t3[4] * t5[1] + t3[5] * t5[0] - t3[6] * t5[3] + t3[7] * t5[2],
             t3[0] * t5[6] - t3[1] * t5[7] - t3[2] * t5[4] - t3[3] * t5[5] +
                 t3[4] * t5[2] + t3[5] * t5[3] + t3[6] * t5[0] - t3[7] * t5[1],
             t3[0] * t5[7] + t3[1] * t5[6] - t3[2] * t5[5] + t3[3] * t5[4] +
                 t3[4] * t5[3] - t3[5] * t5[2] + t3[6] * t5[1] + t3[7] * t5[0]);
}

template <>
inline Dil sp(const Dil& dila, const Dil& dil) {
  const Dil& t1 = dil;
  const Dil& t2 = dila;
  Dil t3(t1[0] * t2[0] + t1[1] * t2[1], t1[0] * t2[1] + t1[1] * t2[0]);
  const Dil& t4 = dil;
  Dil t5 = reverse(t4);
  return Dil(t3[0] * t5[0] + t3[1] * t5[1], t3[0] * t5[1] + t3[1] * t5[0]);
}

template <>
inline Trv sp(const Trv& trva, const Trv& trv) {
  const Trv& t1 = trv;
  const Trv& t2 = trva;
  Trv t3(t1[0] * t2[0], t1[0] * t2[1] + t1[1] * t2[0],
         t1[0] * t2[2] + t1[2] * t2[0], t1[0] * t2[3] + t1[3] * t2[0]);
  const Trv& t4 = trv;
  Trv t5 = reverse(t4);
  return Trv(t3[0] * t5[0], t3[0] * t5[1] + t3[1] * t5[0],
             t3[0] * t5[2] + t3[2] * t5[0], t3[0] * t5[3] + t3[3] * t5[0]);
}

template <>
inline Mtd sp(const Mtd& mtda, const Mtd& mtd) {
  const Mtd& t1 = mtda;
  const Mtd& t2 = mtd;
  Mtd t3(t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
             t1[7] * t2[7] - t1[8] * t2[8] - t1[9] * t2[9] - t1[10] * t2[10],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
             t1[7] * t2[8] + t1[8] * t2[7] - t1[9] * t2[10] + t1[10] * t2[9],
         t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
             t1[7] * t2[9] + t1[8] * t2[10] + t1[9] * t2[7] - t1[10] * t2[8],
         t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
             t1[7] * t2[10] - t1[8] * t2[9] + t1[9] * t2[8] + t1[10] * t2[7],
         t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] - t1[3] * t2[11] +
             t1[4] * t2[0] - t1[4] * t2[7] - t1[5] * t2[1] + t1[5] * t2[8] -
             t1[6] * t2[2] + t1[6] * t2[9] + t1[7] * t2[4] + t1[8] * t2[5] +
             t1[9] * t2[6] - t1[10] * t2[11] - t1[11] * t2[3] + t1[11] * t2[10],
         t1[0] * t2[5] - t1[1] * t2[4] + t1[2] * t2[11] + t1[3] * t2[6] +
             t1[4] * t2[1] - t1[4] * t2[8] + t1[5] * t2[0] - t1[5] * t2[7] -
             t1[6] * t2[3] + t1[6] * t2[10] + t1[7] * t2[5] - t1[8] * t2[4] +
             t1[9] * t2[11] + t1[10] * t2[6] + t1[11] * t2[2] - t1[11] * t2[9],
         t1[0] * t2[6] - t1[1] * t2[11] - t1[2] * t2[4] - t1[3] * t2[5] +
             t1[4] * t2[2] - t1[4] * t2[9] + t1[5] * t2[3] - t1[5] * t2[10] +
             t1[6] * t2[0] - t1[6] * t2[7] + t1[7] * t2[6] - t1[8] * t2[11] -
             t1[9] * t2[4] - t1[10] * t2[5] - t1[11] * t2[1] + t1[11] * t2[8],
         t1[0] * t2[7] - t1[1] * t2[8] - t1[2] * t2[9] - t1[3] * t2[10] +
             t1[7] * t2[0] - t1[8] * t2[1] - t1[9] * t2[2] - t1[10] * t2[3],
         t1[0] * t2[8] + t1[1] * t2[7] - t1[2] * t2[10] + t1[3] * t2[9] +
             t1[7] * t2[1] + t1[8] * t2[0] - t1[9] * t2[3] + t1[10] * t2[2],
         t1[0] * t2[9] + t1[1] * t2[10] + t1[2] * t2[7] - t1[3] * t2[8] +
             t1[7] * t2[2] + t1[8] * t2[3] + t1[9] * t2[0] - t1[10] * t2[1],
         t1[0] * t2[10] - t1[1] * t2[9] + t1[2] * t2[8] + t1[3] * t2[7] +
             t1[7] * t2[3] - t1[8] * t2[2] + t1[9] * t2[1] + t1[10] * t2[0],
         t1[0] * t2[11] + t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] +
             t1[4] * t2[3] - t1[4] * t2[10] - t1[5] * t2[2] + t1[5] * t2[9] +
             t1[6] * t2[1] - t1[6] * t2[8] + t1[7] * t2[11] + t1[8] * t2[6] -
             t1[9] * t2[5] + t1[10] * t2[4] + t1[11] * t2[0] - t1[11] * t2[7]);
  const Mtd& t4 = mtd;
  Mtd t5 = reverse(t4);
  return Mtd(
      t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
          t3[7] * t5[7] - t3[8] * t5[8] - t3[9] * t5[9] - t3[10] * t5[10],
      t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
          t3[7] * t5[8] + t3[8] * t5[7] - t3[9] * t5[10] + t3[10] * t5[9],
      t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
          t3[7] * t5[9] + t3[8] * t5[10] + t3[9] * t5[7] - t3[10] * t5[8],
      t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
          t3[7] * t5[10] - t3[8] * t5[9] + t3[9] * t5[8] + t3[10] * t5[7],
      t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] - t3[3] * t5[11] +
          t3[4] * t5[0] - t3[4] * t5[7] - t3[5] * t5[1] + t3[5] * t5[8] -
          t3[6] * t5[2] + t3[6] * t5[9] + t3[7] * t5[4] + t3[8] * t5[5] +
          t3[9] * t5[6] - t3[10] * t5[11] - t3[11] * t5[3] + t3[11] * t5[10],
      t3[0] * t5[5] - t3[1] * t5[4] + t3[2] * t5[11] + t3[3] * t5[6] +
          t3[4] * t5[1] - t3[4] * t5[8] + t3[5] * t5[0] - t3[5] * t5[7] -
          t3[6] * t5[3] + t3[6] * t5[10] + t3[7] * t5[5] - t3[8] * t5[4] +
          t3[9] * t5[11] + t3[10] * t5[6] + t3[11] * t5[2] - t3[11] * t5[9],
      t3[0] * t5[6] - t3[1] * t5[11] - t3[2] * t5[4] - t3[3] * t5[5] +
          t3[4] * t5[2] - t3[4] * t5[9] + t3[5] * t5[3] - t3[5] * t5[10] +
          t3[6] * t5[0] - t3[6] * t5[7] + t3[7] * t5[6] - t3[8] * t5[11] -
          t3[9] * t5[4] - t3[10] * t5[5] - t3[11] * t5[1] + t3[11] * t5[8],
      t3[0] * t5[7] - t3[1] * t5[8] - t3[2] * t5[9] - t3[3] * t5[10] +
          t3[7] * t5[0] - t3[8] * t5[1] - t3[9] * t5[2] - t3[10] * t5[3],
      t3[0] * t5[8] + t3[1] * t5[7] - t3[2] * t5[10] + t3[3] * t5[9] +
          t3[7] * t5[1] + t3[8] * t5[0] - t3[9] * t5[3] + t3[10] * t5[2],
      t3[0] * t5[9] + t3[1] * t5[10] + t3[2] * t5[7] - t3[3] * t5[8] +
          t3[7] * t5[2] + t3[8] * t5[3] + t3[9] * t5[0] - t3[10] * t5[1],
      t3[0] * t5[10] - t3[1] * t5[9] + t3[2] * t5[8] + t3[3] * t5[7] +
          t3[7] * t5[3] - t3[8] * t5[2] + t3[9] * t5[1] + t3[10] * t5[0],
      t3[0] * t5[11] + t3[1] * t5[6] - t3[2] * t5[5] + t3[3] * t5[4] +
          t3[4] * t5[3] - t3[4] * t5[10] - t3[5] * t5[2] + t3[5] * t5[9] +
          t3[6] * t5[1] - t3[6] * t5[8] + t3[7] * t5[11] + t3[8] * t5[6] -
          t3[9] * t5[5] + t3[10] * t5[4] + t3[11] * t5[0] - t3[11] * t5[7]);
}

template <>
inline Trs sp(const Trs& trsa, const Trs& trs) {
  const Trs& t1 = trs;
  const Trs& t2 = trsa;
  Trs t3(t1[0] * t2[0], t1[0] * t2[1] + t1[1] * t2[0],
         t1[0] * t2[2] + t1[2] * t2[0], t1[0] * t2[3] + t1[3] * t2[0]);
  const Trs& t4 = trs;
  Trs t5 = reverse(t4);
  return Trs(t3[0] * t5[0], t3[0] * t5[1] + t3[1] * t5[0],
             t3[0] * t5[2] + t3[2] * t5[0], t3[0] * t5[3] + t3[3] * t5[0]);
}

template <>
inline Rtc sp(const Rtc& rtca, const Rtc& rtc) {
  const Rtc& t1 = rtc;
  const Rtc& t2 = rtca;
  Mtt t3(
      t1[0] * t2[0] + t1[1] * t2[1] + t1[2] * t2[2] - t1[3] * t2[4] -
          t1[4] * t2[3] + t1[5] * t2[8] + t1[6] * t2[9] + t1[7] * t2[10] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[7] + t1[11] * t2[11] +
          t1[12] * t2[12] + t1[13] * t2[13] - t1[14] * t2[14] - t1[15] * t2[15],
      t1[0] * t2[1] - t1[1] * t2[0] + t1[2] * t2[14] - t1[3] * t2[8] -
          t1[4] * t2[5] - t1[5] * t2[4] + t1[6] * t2[10] - t1[7] * t2[9] -
          t1[8] * t2[3] + t1[9] * t2[7] - t1[10] * t2[6] + t1[11] * t2[12] -
          t1[12] * t2[11] + t1[13] * t2[15] + t1[14] * t2[2] + t1[15] * t2[13],
      t1[0] * t2[2] - t1[1] * t2[14] - t1[2] * t2[0] - t1[3] * t2[9] -
          t1[4] * t2[6] - t1[5] * t2[10] - t1[6] * t2[4] + t1[7] * t2[8] -
          t1[8] * t2[7] - t1[9] * t2[3] + t1[10] * t2[5] + t1[11] * t2[13] -
          t1[12] * t2[15] - t1[13] * t2[11] - t1[14] * t2[1] - t1[15] * t2[12],
      t1[0] * t2[14] + t1[1] * t2[2] - t1[2] * t2[1] - t1[3] * t2[10] -
          t1[4] * t2[7] + t1[5] * t2[9] - t1[6] * t2[8] - t1[7] * t2[4] +
          t1[8] * t2[6] - t1[9] * t2[5] - t1[10] * t2[3] + t1[11] * t2[15] +
          t1[12] * t2[13] - t1[13] * t2[12] + t1[14] * t2[0] + t1[15] * t2[11],
      t1[0] * t2[3] - t1[1] * t2[5] - t1[2] * t2[6] - t1[3] * t2[0] -
          t1[3] * t2[11] - t1[5] * t2[1] - t1[5] * t2[12] - t1[6] * t2[2] -
          t1[6] * t2[13] + t1[7] * t2[14] + t1[7] * t2[15] - t1[11] * t2[3] +
          t1[12] * t2[5] + t1[13] * t2[6] - t1[14] * t2[7] + t1[15] * t2[7],
      t1[0] * t2[5] + t1[1] * t2[3] - t1[2] * t2[7] - t1[3] * t2[1] -
          t1[3] * t2[12] + t1[5] * t2[0] + t1[5] * t2[11] - t1[6] * t2[14] -
          t1[6] * t2[15] - t1[7] * t2[2] - t1[7] * t2[13] - t1[11] * t2[5] -
          t1[12] * t2[3] + t1[13] * t2[7] + t1[14] * t2[6] - t1[15] * t2[6],
      t1[0] * t2[6] + t1[1] * t2[7] + t1[2] * t2[3] - t1[3] * t2[2] -
          t1[3] * t2[13] + t1[5] * t2[14] + t1[5] * t2[15] + t1[6] * t2[0] +
          t1[6] * t2[11] + t1[7] * t2[1] + t1[7] * t2[12] - t1[11] * t2[6] -
          t1[12] * t2[7] - t1[13] * t2[3] - t1[14] * t2[5] + t1[15] * t2[5],
      t1[0] * t2[4] - t1[1] * t2[8] - t1[2] * t2[9] - t1[4] * t2[0] +
          t1[4] * t2[11] - t1[8] * t2[1] + t1[8] * t2[12] - t1[9] * t2[2] +
          t1[9] * t2[13] + t1[10] * t2[14] - t1[10] * t2[15] + t1[11] * t2[4] -
          t1[12] * t2[8] - t1[13] * t2[9] - t1[14] * t2[10] - t1[15] * t2[10],
      t1[0] * t2[8] + t1[1] * t2[4] - t1[2] * t2[10] - t1[4] * t2[1] +
          t1[4] * t2[12] + t1[8] * t2[0] - t1[8] * t2[11] - t1[9] * t2[14] +
          t1[9] * t2[15] - t1[10] * t2[2] + t1[10] * t2[13] + t1[11] * t2[8] +
          t1[12] * t2[4] - t1[13] * t2[10] + t1[14] * t2[9] + t1[15] * t2[9],
      t1[0] * t2[9] + t1[1] * t2[10] + t1[2] * t2[4] - t1[4] * t2[2] +
          t1[4] * t2[13] + t1[8] * t2[14] - t1[8] * t2[15] + t1[9] * t2[0] -
          t1[9] * t2[11] + t1[10] * t2[1] - t1[10] * t2[12] + t1[11] * t2[9] +
          t1[12] * t2[10] + t1[13] * t2[4] - t1[14] * t2[8] - t1[15] * t2[8],
      t1[0] * t2[11] + t1[1] * t2[12] + t1[2] * t2[13] + t1[3] * t2[4] -
          t1[4] * t2[3] - t1[5] * t2[8] - t1[6] * t2[9] - t1[7] * t2[10] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[7] + t1[11] * t2[0] +
          t1[12] * t2[1] + t1[13] * t2[2] - t1[14] * t2[15] - t1[15] * t2[14],
      t1[0] * t2[12] - t1[1] * t2[11] + t1[2] * t2[15] + t1[3] * t2[8] -
          t1[4] * t2[5] + t1[5] * t2[4] - t1[6] * t2[10] + t1[7] * t2[9] -
          t1[8] * t2[3] + t1[9] * t2[7] - t1[10] * t2[6] + t1[11] * t2[1] -
          t1[12] * t2[0] + t1[13] * t2[14] + t1[14] * t2[13] + t1[15] * t2[2],
      t1[0] * t2[13] - t1[1] * t2[15] - t1[2] * t2[11] + t1[3] * t2[9] -
          t1[4] * t2[6] + t1[5] * t2[10] + t1[6] * t2[4] - t1[7] * t2[8] -
          t1[8] * t2[7] - t1[9] * t2[3] + t1[10] * t2[5] + t1[11] * t2[2] -
          t1[12] * t2[14] - t1[13] * t2[0] - t1[14] * t2[12] - t1[15] * t2[1],
      t1[0] * t2[15] + t1[1] * t2[13] - t1[2] * t2[12] + t1[3] * t2[10] -
          t1[4] * t2[7] - t1[5] * t2[9] + t1[6] * t2[8] + t1[7] * t2[4] +
          t1[8] * t2[6] - t1[9] * t2[5] - t1[10] * t2[3] + t1[11] * t2[14] +
          t1[12] * t2[2] - t1[13] * t2[1] + t1[14] * t2[11] + t1[15] * t2[0],
      t1[0] * t2[7] - t1[1] * t2[6] + t1[2] * t2[5] - t1[3] * t2[14] -
          t1[3] * t2[15] - t1[5] * t2[2] - t1[5] * t2[13] + t1[6] * t2[1] +
          t1[6] * t2[12] - t1[7] * t2[0] - t1[7] * t2[11] - t1[11] * t2[7] +
          t1[12] * t2[6] - t1[13] * t2[5] + t1[14] * t2[3] - t1[15] * t2[3],
      t1[0] * t2[10] - t1[1] * t2[9] + t1[2] * t2[8] - t1[4] * t2[14] +
          t1[4] * t2[15] - t1[8] * t2[2] + t1[8] * t2[13] + t1[9] * t2[1] -
          t1[9] * t2[12] - t1[10] * t2[0] + t1[10] * t2[11] + t1[11] * t2[10] -
          t1[12] * t2[9] + t1[13] * t2[8] + t1[14] * t2[4] + t1[15] * t2[4]);
  const Rtc& t4 = rtc;
  Rtc t5 = reverse(t4);
  return Rtc(
      t3[0] * t5[0] + t3[1] * t5[1] + t3[2] * t5[2] - t3[3] * t5[14] -
          t3[4] * t5[4] + t3[5] * t5[8] + t3[6] * t5[9] - t3[7] * t5[3] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[11] + t3[11] * t5[12] +
          t3[12] * t5[13] - t3[13] * t5[15] + t3[14] * t5[10] + t3[15] * t5[7],
      t3[0] * t5[1] - t3[1] * t5[0] + t3[2] * t5[14] + t3[3] * t5[2] -
          t3[4] * t5[8] - t3[5] * t5[4] + t3[6] * t5[10] - t3[7] * t5[5] -
          t3[8] * t5[3] + t3[9] * t5[7] + t3[10] * t5[12] - t3[11] * t5[11] +
          t3[12] * t5[15] + t3[13] * t5[13] - t3[14] * t5[9] - t3[15] * t5[6],
      t3[0] * t5[2] - t3[1] * t5[14] - t3[2] * t5[0] - t3[3] * t5[1] -
          t3[4] * t5[9] - t3[5] * t5[10] - t3[6] * t5[4] - t3[7] * t5[6] -
          t3[8] * t5[7] - t3[9] * t5[3] + t3[10] * t5[13] - t3[11] * t5[15] -
          t3[12] * t5[11] - t3[13] * t5[12] + t3[14] * t5[8] + t3[15] * t5[5],
      t3[0] * t5[3] - t3[1] * t5[5] - t3[2] * t5[6] - t3[3] * t5[7] -
          t3[4] * t5[0] - t3[4] * t5[11] - t3[5] * t5[1] - t3[5] * t5[12] -
          t3[6] * t5[2] - t3[6] * t5[13] - t3[10] * t5[3] + t3[11] * t5[5] +
          t3[12] * t5[6] + t3[13] * t5[7] + t3[14] * t5[14] + t3[14] * t5[15],
      t3[0] * t5[4] - t3[1] * t5[8] - t3[2] * t5[9] - t3[3] * t5[10] -
          t3[7] * t5[0] + t3[7] * t5[11] - t3[8] * t5[1] + t3[8] * t5[12] -
          t3[9] * t5[2] + t3[9] * t5[13] + t3[10] * t5[4] - t3[11] * t5[8] -
          t3[12] * t5[9] - t3[13] * t5[10] + t3[15] * t5[14] - t3[15] * t5[15],
      t3[0] * t5[5] + t3[1] * t5[3] - t3[2] * t5[7] + t3[3] * t5[6] -
          t3[4] * t5[1] - t3[4] * t5[12] + t3[5] * t5[0] + t3[5] * t5[11] -
          t3[6] * t5[14] - t3[6] * t5[15] - t3[10] * t5[5] - t3[11] * t5[3] +
          t3[12] * t5[7] - t3[13] * t5[6] - t3[14] * t5[2] - t3[14] * t5[13],
      t3[0] * t5[6] + t3[1] * t5[7] + t3[2] * t5[3] - t3[3] * t5[5] -
          t3[4] * t5[2] - t3[4] * t5[13] + t3[5] * t5[14] + t3[5] * t5[15] +
          t3[6] * t5[0] + t3[6] * t5[11] - t3[10] * t5[6] - t3[11] * t5[7] -
          t3[12] * t5[3] + t3[13] * t5[5] + t3[14] * t5[1] + t3[14] * t5[12],
      t3[0] * t5[7] - t3[1] * t5[6] + t3[2] * t5[5] + t3[3] * t5[3] -
          t3[4] * t5[14] - t3[4] * t5[15] - t3[5] * t5[2] - t3[5] * t5[13] +
          t3[6] * t5[1] + t3[6] * t5[12] - t3[10] * t5[7] + t3[11] * t5[6] -
          t3[12] * t5[5] - t3[13] * t5[3] - t3[14] * t5[0] - t3[14] * t5[11],
      t3[0] * t5[8] + t3[1] * t5[4] - t3[2] * t5[10] + t3[3] * t5[9] -
          t3[7] * t5[1] + t3[7] * t5[12] + t3[8] * t5[0] - t3[8] * t5[11] -
          t3[9] * t5[14] + t3[9] * t5[15] + t3[10] * t5[8] + t3[11] * t5[4] -
          t3[12] * t5[10] + t3[13] * t5[9] - t3[15] * t5[2] + t3[15] * t5[13],
      t3[0] * t5[9] + t3[1] * t5[10] + t3[2] * t5[4] - t3[3] * t5[8] -
          t3[7] * t5[2] + t3[7] * t5[13] + t3[8] * t5[14] - t3[8] * t5[15] +
          t3[9] * t5[0] - t3[9] * t5[11] + t3[10] * t5[9] + t3[11] * t5[10] +
          t3[12] * t5[4] - t3[13] * t5[8] + t3[15] * t5[1] - t3[15] * t5[12],
      t3[0] * t5[10] - t3[1] * t5[9] + t3[2] * t5[8] + t3[3] * t5[4] -
          t3[7] * t5[14] + t3[7] * t5[15] - t3[8] * t5[2] + t3[8] * t5[13] +
          t3[9] * t5[1] - t3[9] * t5[12] + t3[10] * t5[10] - t3[11] * t5[9] +
          t3[12] * t5[8] + t3[13] * t5[4] - t3[15] * t5[0] + t3[15] * t5[11],
      t3[0] * t5[11] + t3[1] * t5[12] + t3[2] * t5[13] - t3[3] * t5[15] +
          t3[4] * t5[4] - t3[5] * t5[8] - t3[6] * t5[9] - t3[7] * t5[3] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[0] + t3[11] * t5[1] +
          t3[12] * t5[2] - t3[13] * t5[14] - t3[14] * t5[10] + t3[15] * t5[7],
      t3[0] * t5[12] - t3[1] * t5[11] + t3[2] * t5[15] + t3[3] * t5[13] +
          t3[4] * t5[8] + t3[5] * t5[4] - t3[6] * t5[10] - t3[7] * t5[5] -
          t3[8] * t5[3] + t3[9] * t5[7] + t3[10] * t5[1] - t3[11] * t5[0] +
          t3[12] * t5[14] + t3[13] * t5[2] + t3[14] * t5[9] - t3[15] * t5[6],
      t3[0] * t5[13] - t3[1] * t5[15] - t3[2] * t5[11] - t3[3] * t5[12] +
          t3[4] * t5[9] + t3[5] * t5[10] + t3[6] * t5[4] - t3[7] * t5[6] -
          t3[8] * t5[7] - t3[9] * t5[3] + t3[10] * t5[2] - t3[11] * t5[14] -
          t3[12] * t5[0] - t3[13] * t5[1] - t3[14] * t5[8] + t3[15] * t5[5],
      t3[0] * t5[14] + t3[1] * t5[2] - t3[2] * t5[1] + t3[3] * t5[0] -
          t3[4] * t5[10] + t3[5] * t5[9] - t3[6] * t5[8] - t3[7] * t5[7] +
          t3[8] * t5[6] - t3[9] * t5[5] + t3[10] * t5[15] + t3[11] * t5[13] -
          t3[12] * t5[12] + t3[13] * t5[11] - t3[14] * t5[4] - t3[15] * t5[3],
      t3[0] * t5[15] + t3[1] * t5[13] - t3[2] * t5[12] + t3[3] * t5[11] +
          t3[4] * t5[10] - t3[5] * t5[9] + t3[6] * t5[8] - t3[7] * t5[7] +
          t3[8] * t5[6] - t3[9] * t5[5] + t3[10] * t5[14] + t3[11] * t5[2] -
          t3[12] * t5[1] + t3[13] * t5[0] + t3[14] * t5[4] - t3[15] * t5[3]);
}

template <>
inline Mtt sp(const Mtt& mtta, const Mtt& mtt) {
  const Mtt& t1 = mtt;
  const Mtt& t2 = mtta;
  Mtt t3(
      t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
          t1[4] * t2[7] + t1[5] * t2[8] + t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[10] - t1[11] * t2[11] -
          t1[12] * t2[12] - t1[13] * t2[13] - t1[14] * t2[15] - t1[15] * t2[14],
      t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
          t1[4] * t2[8] - t1[5] * t2[7] + t1[6] * t2[15] + t1[7] * t2[5] -
          t1[8] * t2[4] + t1[9] * t2[14] + t1[10] * t2[11] + t1[11] * t2[10] -
          t1[12] * t2[13] + t1[13] * t2[12] + t1[14] * t2[9] + t1[15] * t2[6],
      t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
          t1[4] * t2[9] - t1[5] * t2[15] - t1[6] * t2[7] + t1[7] * t2[6] -
          t1[8] * t2[14] - t1[9] * t2[4] + t1[10] * t2[12] + t1[11] * t2[13] +
          t1[12] * t2[10] - t1[13] * t2[11] - t1[14] * t2[8] - t1[15] * t2[5],
      t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
          t1[4] * t2[15] + t1[5] * t2[9] - t1[6] * t2[8] + t1[7] * t2[14] +
          t1[8] * t2[6] - t1[9] * t2[5] + t1[10] * t2[13] - t1[11] * t2[12] +
          t1[12] * t2[11] + t1[13] * t2[10] + t1[14] * t2[7] + t1[15] * t2[4],
      t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] - t1[3] * t2[14] +
          t1[4] * t2[0] + t1[4] * t2[10] - t1[5] * t2[1] - t1[5] * t2[11] -
          t1[6] * t2[2] - t1[6] * t2[12] - t1[10] * t2[4] - t1[11] * t2[5] -
          t1[12] * t2[6] + t1[13] * t2[14] - t1[14] * t2[3] - t1[14] * t2[13],
      t1[0] * t2[5] - t1[1] * t2[4] + t1[2] * t2[14] + t1[3] * t2[6] +
          t1[4] * t2[1] + t1[4] * t2[11] + t1[5] * t2[0] + t1[5] * t2[10] -
          t1[6] * t2[3] - t1[6] * t2[13] - t1[10] * t2[5] + t1[11] * t2[4] -
          t1[12] * t2[14] - t1[13] * t2[6] + t1[14] * t2[2] + t1[14] * t2[12],
      t1[0] * t2[6] - t1[1] * t2[14] - t1[2] * t2[4] - t1[3] * t2[5] +
          t1[4] * t2[2] + t1[4] * t2[12] + t1[5] * t2[3] + t1[5] * t2[13] +
          t1[6] * t2[0] + t1[6] * t2[10] - t1[10] * t2[6] + t1[11] * t2[14] +
          t1[12] * t2[4] + t1[13] * t2[5] - t1[14] * t2[1] - t1[14] * t2[11],
      t1[0] * t2[7] + t1[1] * t2[8] + t1[2] * t2[9] - t1[3] * t2[15] +
          t1[7] * t2[0] - t1[7] * t2[10] - t1[8] * t2[1] + t1[8] * t2[11] -
          t1[9] * t2[2] + t1[9] * t2[12] + t1[10] * t2[7] + t1[11] * t2[8] +
          t1[12] * t2[9] - t1[13] * t2[15] - t1[15] * t2[3] + t1[15] * t2[13],
      t1[0] * t2[8] - t1[1] * t2[7] + t1[2] * t2[15] + t1[3] * t2[9] +
          t1[7] * t2[1] - t1[7] * t2[11] + t1[8] * t2[0] - t1[8] * t2[10] -
          t1[9] * t2[3] + t1[9] * t2[13] + t1[10] * t2[8] - t1[11] * t2[7] +
          t1[12] * t2[15] + t1[13] * t2[9] + t1[15] * t2[2] - t1[15] * t2[12],
      t1[0] * t2[9] - t1[1] * t2[15] - t1[2] * t2[7] - t1[3] * t2[8] +
          t1[7] * t2[2] - t1[7] * t2[12] + t1[8] * t2[3] - t1[8] * t2[13] +
          t1[9] * t2[0] - t1[9] * t2[10] + t1[10] * t2[9] - t1[11] * t2[15] -
          t1[12] * t2[7] - t1[13] * t2[8] - t1[15] * t2[1] + t1[15] * t2[11],
      t1[0] * t2[10] - t1[1] * t2[11] - t1[2] * t2[12] - t1[3] * t2[13] -
          t1[4] * t2[7] - t1[5] * t2[8] - t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[0] - t1[11] * t2[1] -
          t1[12] * t2[2] - t1[13] * t2[3] + t1[14] * t2[15] - t1[15] * t2[14],
      t1[0] * t2[11] + t1[1] * t2[10] - t1[2] * t2[13] + t1[3] * t2[12] -
          t1[4] * t2[8] + t1[5] * t2[7] - t1[6] * t2[15] + t1[7] * t2[5] -
          t1[8] * t2[4] + t1[9] * t2[14] + t1[10] * t2[1] + t1[11] * t2[0] -
          t1[12] * t2[3] + t1[13] * t2[2] - t1[14] * t2[9] + t1[15] * t2[6],
      t1[0] * t2[12] + t1[1] * t2[13] + t1[2] * t2[10] - t1[3] * t2[11] -
          t1[4] * t2[9] + t1[5] * t2[15] + t1[6] * t2[7] + t1[7] * t2[6] -
          t1[8] * t2[14] - t1[9] * t2[4] + t1[10] * t2[2] + t1[11] * t2[3] +
          t1[12] * t2[0] - t1[13] * t2[1] + t1[14] * t2[8] - t1[15] * t2[5],
      t1[0] * t2[13] - t1[1] * t2[12] + t1[2] * t2[11] + t1[3] * t2[10] -
          t1[4] * t2[15] - t1[5] * t2[9] + t1[6] * t2[8] + t1[7] * t2[14] +
          t1[8] * t2[6] - t1[9] * t2[5] + t1[10] * t2[3] - t1[11] * t2[2] +
          t1[12] * t2[1] + t1[13] * t2[0] - t1[14] * t2[7] + t1[15] * t2[4],
      t1[0] * t2[14] + t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] +
          t1[4] * t2[3] + t1[4] * t2[13] - t1[5] * t2[2] - t1[5] * t2[12] +
          t1[6] * t2[1] + t1[6] * t2[11] - t1[10] * t2[14] - t1[11] * t2[6] +
          t1[12] * t2[5] - t1[13] * t2[4] + t1[14] * t2[0] + t1[14] * t2[10],
      t1[0] * t2[15] + t1[1] * t2[9] - t1[2] * t2[8] + t1[3] * t2[7] +
          t1[7] * t2[3] - t1[7] * t2[13] - t1[8] * t2[2] + t1[8] * t2[12] +
          t1[9] * t2[1] - t1[9] * t2[11] + t1[10] * t2[15] + t1[11] * t2[9] -
          t1[12] * t2[8] + t1[13] * t2[7] + t1[15] * t2[0] - t1[15] * t2[10]);
  const Mtt& t4 = mtt;
  Mtt t5 = reverse(t4);
  return Mtt(
      t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
          t3[4] * t5[7] + t3[5] * t5[8] + t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[10] - t3[11] * t5[11] -
          t3[12] * t5[12] - t3[13] * t5[13] - t3[14] * t5[15] - t3[15] * t5[14],
      t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
          t3[4] * t5[8] - t3[5] * t5[7] + t3[6] * t5[15] + t3[7] * t5[5] -
          t3[8] * t5[4] + t3[9] * t5[14] + t3[10] * t5[11] + t3[11] * t5[10] -
          t3[12] * t5[13] + t3[13] * t5[12] + t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
          t3[4] * t5[9] - t3[5] * t5[15] - t3[6] * t5[7] + t3[7] * t5[6] -
          t3[8] * t5[14] - t3[9] * t5[4] + t3[10] * t5[12] + t3[11] * t5[13] +
          t3[12] * t5[10] - t3[13] * t5[11] - t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
          t3[4] * t5[15] + t3[5] * t5[9] - t3[6] * t5[8] + t3[7] * t5[14] +
          t3[8] * t5[6] - t3[9] * t5[5] + t3[10] * t5[13] - t3[11] * t5[12] +
          t3[12] * t5[11] + t3[13] * t5[10] + t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] - t3[3] * t5[14] +
          t3[4] * t5[0] + t3[4] * t5[10] - t3[5] * t5[1] - t3[5] * t5[11] -
          t3[6] * t5[2] - t3[6] * t5[12] - t3[10] * t5[4] - t3[11] * t5[5] -
          t3[12] * t5[6] + t3[13] * t5[14] - t3[14] * t5[3] - t3[14] * t5[13],
      t3[0] * t5[5] - t3[1] * t5[4] + t3[2] * t5[14] + t3[3] * t5[6] +
          t3[4] * t5[1] + t3[4] * t5[11] + t3[5] * t5[0] + t3[5] * t5[10] -
          t3[6] * t5[3] - t3[6] * t5[13] - t3[10] * t5[5] + t3[11] * t5[4] -
          t3[12] * t5[14] - t3[13] * t5[6] + t3[14] * t5[2] + t3[14] * t5[12],
      t3[0] * t5[6] - t3[1] * t5[14] - t3[2] * t5[4] - t3[3] * t5[5] +
          t3[4] * t5[2] + t3[4] * t5[12] + t3[5] * t5[3] + t3[5] * t5[13] +
          t3[6] * t5[0] + t3[6] * t5[10] - t3[10] * t5[6] + t3[11] * t5[14] +
          t3[12] * t5[4] + t3[13] * t5[5] - t3[14] * t5[1] - t3[14] * t5[11],
      t3[0] * t5[7] + t3[1] * t5[8] + t3[2] * t5[9] - t3[3] * t5[15] +
          t3[7] * t5[0] - t3[7] * t5[10] - t3[8] * t5[1] + t3[8] * t5[11] -
          t3[9] * t5[2] + t3[9] * t5[12] + t3[10] * t5[7] + t3[11] * t5[8] +
          t3[12] * t5[9] - t3[13] * t5[15] - t3[15] * t5[3] + t3[15] * t5[13],
      t3[0] * t5[8] - t3[1] * t5[7] + t3[2] * t5[15] + t3[3] * t5[9] +
          t3[7] * t5[1] - t3[7] * t5[11] + t3[8] * t5[0] - t3[8] * t5[10] -
          t3[9] * t5[3] + t3[9] * t5[13] + t3[10] * t5[8] - t3[11] * t5[7] +
          t3[12] * t5[15] + t3[13] * t5[9] + t3[15] * t5[2] - t3[15] * t5[12],
      t3[0] * t5[9] - t3[1] * t5[15] - t3[2] * t5[7] - t3[3] * t5[8] +
          t3[7] * t5[2] - t3[7] * t5[12] + t3[8] * t5[3] - t3[8] * t5[13] +
          t3[9] * t5[0] - t3[9] * t5[10] + t3[10] * t5[9] - t3[11] * t5[15] -
          t3[12] * t5[7] - t3[13] * t5[8] - t3[15] * t5[1] + t3[15] * t5[11],
      t3[0] * t5[10] - t3[1] * t5[11] - t3[2] * t5[12] - t3[3] * t5[13] -
          t3[4] * t5[7] - t3[5] * t5[8] - t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[0] - t3[11] * t5[1] -
          t3[12] * t5[2] - t3[13] * t5[3] + t3[14] * t5[15] - t3[15] * t5[14],
      t3[0] * t5[11] + t3[1] * t5[10] - t3[2] * t5[13] + t3[3] * t5[12] -
          t3[4] * t5[8] + t3[5] * t5[7] - t3[6] * t5[15] + t3[7] * t5[5] -
          t3[8] * t5[4] + t3[9] * t5[14] + t3[10] * t5[1] + t3[11] * t5[0] -
          t3[12] * t5[3] + t3[13] * t5[2] - t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[12] + t3[1] * t5[13] + t3[2] * t5[10] - t3[3] * t5[11] -
          t3[4] * t5[9] + t3[5] * t5[15] + t3[6] * t5[7] + t3[7] * t5[6] -
          t3[8] * t5[14] - t3[9] * t5[4] + t3[10] * t5[2] + t3[11] * t5[3] +
          t3[12] * t5[0] - t3[13] * t5[1] + t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[13] - t3[1] * t5[12] + t3[2] * t5[11] + t3[3] * t5[10] -
          t3[4] * t5[15] - t3[5] * t5[9] + t3[6] * t5[8] + t3[7] * t5[14] +
          t3[8] * t5[6] - t3[9] * t5[5] + t3[10] * t5[3] - t3[11] * t5[2] +
          t3[12] * t5[1] + t3[13] * t5[0] - t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[14] + t3[1] * t5[6] - t3[2] * t5[5] + t3[3] * t5[4] +
          t3[4] * t5[3] + t3[4] * t5[13] - t3[5] * t5[2] - t3[5] * t5[12] +
          t3[6] * t5[1] + t3[6] * t5[11] - t3[10] * t5[14] - t3[11] * t5[6] +
          t3[12] * t5[5] - t3[13] * t5[4] + t3[14] * t5[0] + t3[14] * t5[10],
      t3[0] * t5[15] + t3[1] * t5[9] - t3[2] * t5[8] + t3[3] * t5[7] +
          t3[7] * t5[3] - t3[7] * t5[13] - t3[8] * t5[2] + t3[8] * t5[12] +
          t3[9] * t5[1] - t3[9] * t5[11] + t3[10] * t5[15] + t3[11] * t5[9] -
          t3[12] * t5[8] + t3[13] * t5[7] + t3[15] * t5[0] - t3[15] * t5[10]);
}

template <>
inline Rtt sp(const Rtt& rtta, const Rtt& rtt) {
  const Rtt& t1 = rtt;
  const Rtt& t2 = rtta;
  Rtt t3(t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2],
         t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1],
         t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0],
         t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] - t1[3] * t2[7] +
             t1[4] * t2[0] - t1[5] * t2[1] - t1[6] * t2[2] - t1[7] * t2[3],
         t1[0] * t2[5] - t1[1] * t2[4] + t1[2] * t2[7] + t1[3] * t2[6] +
             t1[4] * t2[1] + t1[5] * t2[0] - t1[6] * t2[3] + t1[7] * t2[2],
         t1[0] * t2[6] - t1[1] * t2[7] - t1[2] * t2[4] - t1[3] * t2[5] +
             t1[4] * t2[2] + t1[5] * t2[3] + t1[6] * t2[0] - t1[7] * t2[1],
         t1[0] * t2[7] + t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] +
             t1[4] * t2[3] - t1[5] * t2[2] + t1[6] * t2[1] + t1[7] * t2[0]);
  const Rtt& t4 = rtt;
  Rtt t5 = reverse(t4);
  return Rtt(t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3],
             t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2],
             t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1],
             t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0],
             t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] - t3[3] * t5[7] +
                 t3[4] * t5[0] - t3[5] * t5[1] - t3[6] * t5[2] - t3[7] * t5[3],
             t3[0] * t5[5] - t3[1] * t5[4] + t3[2] * t5[7] + t3[3] * t5[6] +
                 t3[4] * t5[1] + t3[5] * t5[0] - t3[6] * t5[3] + t3[7] * t5[2],
             t3[0] * t5[6] - t3[1] * t5[7] - t3[2] * t5[4] - t3[3] * t5[5] +
                 t3[4] * t5[2] + t3[5] * t5[3] + t3[6] * t5[0] - t3[7] * t5[1],
             t3[0] * t5[7] + t3[1] * t5[6] - t3[2] * t5[5] + t3[3] * t5[4] +
                 t3[4] * t5[3] - t3[5] * t5[2] + t3[6] * t5[1] + t3[7] * t5[0]);
}

template <>
inline Rtd sp(const Rtd& rtda, const Rtd& rtd) {
  const Rtd& t1 = rtd;
  const Rtd& t2 = rtda;
  Rtd t3(t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
             t1[4] * t2[4] - t1[5] * t2[5] - t1[6] * t2[6] - t1[7] * t2[7],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
             t1[4] * t2[5] + t1[5] * t2[4] - t1[6] * t2[7] + t1[7] * t2[6],
         t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
             t1[4] * t2[6] + t1[5] * t2[7] + t1[6] * t2[4] - t1[7] * t2[5],
         t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
             t1[4] * t2[7] - t1[5] * t2[6] + t1[6] * t2[5] + t1[7] * t2[4],
         t1[0] * t2[4] - t1[1] * t2[5] - t1[2] * t2[6] - t1[3] * t2[7] +
             t1[4] * t2[0] - t1[5] * t2[1] - t1[6] * t2[2] - t1[7] * t2[3],
         t1[0] * t2[5] + t1[1] * t2[4] - t1[2] * t2[7] + t1[3] * t2[6] +
             t1[4] * t2[1] + t1[5] * t2[0] - t1[6] * t2[3] + t1[7] * t2[2],
         t1[0] * t2[6] + t1[1] * t2[7] + t1[2] * t2[4] - t1[3] * t2[5] +
             t1[4] * t2[2] + t1[5] * t2[3] + t1[6] * t2[0] - t1[7] * t2[1],
         t1[0] * t2[7] - t1[1] * t2[6] + t1[2] * t2[5] + t1[3] * t2[4] +
             t1[4] * t2[3] - t1[5] * t2[2] + t1[6] * t2[1] + t1[7] * t2[0]);
  const Rtd& t4 = rtd;
  Rtd t5 = reverse(t4);
  return Rtd(t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
                 t3[4] * t5[4] - t3[5] * t5[5] - t3[6] * t5[6] - t3[7] * t5[7],
             t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
                 t3[4] * t5[5] + t3[5] * t5[4] - t3[6] * t5[7] + t3[7] * t5[6],
             t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
                 t3[4] * t5[6] + t3[5] * t5[7] + t3[6] * t5[4] - t3[7] * t5[5],
             t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
                 t3[4] * t5[7] - t3[5] * t5[6] + t3[6] * t5[5] + t3[7] * t5[4],
             t3[0] * t5[4] - t3[1] * t5[5] - t3[2] * t5[6] - t3[3] * t5[7] +
                 t3[4] * t5[0] - t3[5] * t5[1] - t3[6] * t5[2] - t3[7] * t5[3],
             t3[0] * t5[5] + t3[1] * t5[4] - t3[2] * t5[7] + t3[3] * t5[6] +
                 t3[4] * t5[1] + t3[5] * t5[0] - t3[6] * t5[3] + t3[7] * t5[2],
             t3[0] * t5[6] + t3[1] * t5[7] + t3[2] * t5[4] - t3[3] * t5[5] +
                 t3[4] * t5[2] + t3[5] * t5[3] + t3[6] * t5[0] - t3[7] * t5[1],
             t3[0] * t5[7] - t3[1] * t5[6] + t3[2] * t5[5] + t3[3] * t5[4] +
                 t3[4] * t5[3] - t3[5] * t5[2] + t3[6] * t5[1] + t3[7] * t5[0]);
}

template <>
inline Tvd sp(const Tvd& tvda, const Tvd& tvd) {
  const Tvd& t1 = tvd;
  const Tvd& t2 = tvda;
  Tvd t3(t1[0] * t2[0] + t1[4] * t2[4],
         t1[0] * t2[1] + t1[1] * t2[0] + t1[1] * t2[4] - t1[4] * t2[1],
         t1[0] * t2[2] + t1[2] * t2[0] + t1[2] * t2[4] - t1[4] * t2[2],
         t1[0] * t2[3] + t1[3] * t2[0] + t1[3] * t2[4] - t1[4] * t2[3],
         t1[0] * t2[4] + t1[4] * t2[0]);
  const Tvd& t4 = tvd;
  Tvd t5 = reverse(t4);
  return Tvd(t3[0] * t5[0] + t3[4] * t5[4],
             t3[0] * t5[1] + t3[1] * t5[0] + t3[1] * t5[4] - t3[4] * t5[1],
             t3[0] * t5[2] + t3[2] * t5[0] + t3[2] * t5[4] - t3[4] * t5[2],
             t3[0] * t5[3] + t3[3] * t5[0] + t3[3] * t5[4] - t3[4] * t5[3],
             t3[0] * t5[4] + t3[4] * t5[0]);
}

template <>
inline Tsd sp(const Tsd& tsda, const Tsd& tsd) {
  const Tsd& t1 = tsd;
  const Tsd& t2 = tsda;
  Tsd t3(t1[0] * t2[0] + t1[4] * t2[4],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[1] * t2[4] + t1[4] * t2[1],
         t1[0] * t2[2] + t1[2] * t2[0] - t1[2] * t2[4] + t1[4] * t2[2],
         t1[0] * t2[3] + t1[3] * t2[0] - t1[3] * t2[4] + t1[4] * t2[3],
         t1[0] * t2[4] + t1[4] * t2[0]);
  const Tsd& t4 = tsd;
  Tsd t5 = reverse(t4);
  return Tsd(t3[0] * t5[0] + t3[4] * t5[4],
             t3[0] * t5[1] + t3[1] * t5[0] - t3[1] * t5[4] + t3[4] * t5[1],
             t3[0] * t5[2] + t3[2] * t5[0] - t3[2] * t5[4] + t3[4] * t5[2],
             t3[0] * t5[3] + t3[3] * t5[0] - t3[3] * t5[4] + t3[4] * t5[3],
             t3[0] * t5[4] + t3[4] * t5[0]);
}
template <>
inline Trt sp(const Trt& trta, const Trt& trt) {
  const Trt& t1 = trt;
  const Trt& t2 = trta;
  Mtt t3(
      t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
          t1[4] * t2[7] + t1[5] * t2[8] + t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[10] - t1[11] * t2[11] -
          t1[12] * t2[12] - t1[13] * t2[13],
      t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
          t1[4] * t2[8] - t1[5] * t2[7] + t1[7] * t2[5] - t1[8] * t2[4] +
          t1[10] * t2[11] + t1[11] * t2[10] - t1[12] * t2[13] + t1[13] * t2[12],
      t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
          t1[4] * t2[9] - t1[6] * t2[7] + t1[7] * t2[6] - t1[9] * t2[4] +
          t1[10] * t2[12] + t1[11] * t2[13] + t1[12] * t2[10] - t1[13] * t2[11],
      t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
          t1[5] * t2[9] - t1[6] * t2[8] + t1[8] * t2[6] - t1[9] * t2[5] +
          t1[10] * t2[13] - t1[11] * t2[12] + t1[12] * t2[11] + t1[13] * t2[10],
      t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] + t1[4] * t2[0] +
          t1[4] * t2[10] - t1[5] * t2[1] - t1[5] * t2[11] - t1[6] * t2[2] -
          t1[6] * t2[12] - t1[10] * t2[4] - t1[11] * t2[5] - t1[12] * t2[6],
      t1[0] * t2[5] - t1[1] * t2[4] + t1[3] * t2[6] + t1[4] * t2[1] +
          t1[4] * t2[11] + t1[5] * t2[0] + t1[5] * t2[10] - t1[6] * t2[3] -
          t1[6] * t2[13] - t1[10] * t2[5] + t1[11] * t2[4] - t1[13] * t2[6],
      t1[0] * t2[6] - t1[2] * t2[4] - t1[3] * t2[5] + t1[4] * t2[2] +
          t1[4] * t2[12] + t1[5] * t2[3] + t1[5] * t2[13] + t1[6] * t2[0] +
          t1[6] * t2[10] - t1[10] * t2[6] + t1[12] * t2[4] + t1[13] * t2[5],
      t1[0] * t2[7] + t1[1] * t2[8] + t1[2] * t2[9] + t1[7] * t2[0] -
          t1[7] * t2[10] - t1[8] * t2[1] + t1[8] * t2[11] - t1[9] * t2[2] +
          t1[9] * t2[12] + t1[10] * t2[7] + t1[11] * t2[8] + t1[12] * t2[9],
      t1[0] * t2[8] - t1[1] * t2[7] + t1[3] * t2[9] + t1[7] * t2[1] -
          t1[7] * t2[11] + t1[8] * t2[0] - t1[8] * t2[10] - t1[9] * t2[3] +
          t1[9] * t2[13] + t1[10] * t2[8] - t1[11] * t2[7] + t1[13] * t2[9],
      t1[0] * t2[9] - t1[2] * t2[7] - t1[3] * t2[8] + t1[7] * t2[2] -
          t1[7] * t2[12] + t1[8] * t2[3] - t1[8] * t2[13] + t1[9] * t2[0] -
          t1[9] * t2[10] + t1[10] * t2[9] - t1[12] * t2[7] - t1[13] * t2[8],
      t1[0] * t2[10] - t1[1] * t2[11] - t1[2] * t2[12] - t1[3] * t2[13] -
          t1[4] * t2[7] - t1[5] * t2[8] - t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[0] - t1[11] * t2[1] -
          t1[12] * t2[2] - t1[13] * t2[3],
      t1[0] * t2[11] + t1[1] * t2[10] - t1[2] * t2[13] + t1[3] * t2[12] -
          t1[4] * t2[8] + t1[5] * t2[7] + t1[7] * t2[5] - t1[8] * t2[4] +
          t1[10] * t2[1] + t1[11] * t2[0] - t1[12] * t2[3] + t1[13] * t2[2],
      t1[0] * t2[12] + t1[1] * t2[13] + t1[2] * t2[10] - t1[3] * t2[11] -
          t1[4] * t2[9] + t1[6] * t2[7] + t1[7] * t2[6] - t1[9] * t2[4] +
          t1[10] * t2[2] + t1[11] * t2[3] + t1[12] * t2[0] - t1[13] * t2[1],
      t1[0] * t2[13] - t1[1] * t2[12] + t1[2] * t2[11] + t1[3] * t2[10] -
          t1[5] * t2[9] + t1[6] * t2[8] + t1[8] * t2[6] - t1[9] * t2[5] +
          t1[10] * t2[3] - t1[11] * t2[2] + t1[12] * t2[1] + t1[13] * t2[0],
      t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] + t1[4] * t2[3] +
          t1[4] * t2[13] - t1[5] * t2[2] - t1[5] * t2[12] + t1[6] * t2[1] +
          t1[6] * t2[11] - t1[11] * t2[6] + t1[12] * t2[5] - t1[13] * t2[4],
      t1[1] * t2[9] - t1[2] * t2[8] + t1[3] * t2[7] + t1[7] * t2[3] -
          t1[7] * t2[13] - t1[8] * t2[2] + t1[8] * t2[12] + t1[9] * t2[1] -
          t1[9] * t2[11] + t1[11] * t2[9] - t1[12] * t2[8] + t1[13] * t2[7]);
  const Trt& t4 = trt;
  Trt t5 = reverse(t4);
  return Trt(
      t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
          t3[4] * t5[7] + t3[5] * t5[8] + t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[10] - t3[11] * t5[11] -
          t3[12] * t5[12] - t3[13] * t5[13],
      t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
          t3[4] * t5[8] - t3[5] * t5[7] + t3[7] * t5[5] - t3[8] * t5[4] +
          t3[10] * t5[11] + t3[11] * t5[10] - t3[12] * t5[13] +
          t3[13] * t5[12] + t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
          t3[4] * t5[9] - t3[6] * t5[7] + t3[7] * t5[6] - t3[9] * t5[4] +
          t3[10] * t5[12] + t3[11] * t5[13] + t3[12] * t5[10] -
          t3[13] * t5[11] - t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
          t3[5] * t5[9] - t3[6] * t5[8] + t3[8] * t5[6] - t3[9] * t5[5] +
          t3[10] * t5[13] - t3[11] * t5[12] + t3[12] * t5[11] +
          t3[13] * t5[10] + t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] + t3[4] * t5[0] +
          t3[4] * t5[10] - t3[5] * t5[1] - t3[5] * t5[11] - t3[6] * t5[2] -
          t3[6] * t5[12] - t3[10] * t5[4] - t3[11] * t5[5] - t3[12] * t5[6] -
          t3[14] * t5[3] - t3[14] * t5[13],
      t3[0] * t5[5] - t3[1] * t5[4] + t3[3] * t5[6] + t3[4] * t5[1] +
          t3[4] * t5[11] + t3[5] * t5[0] + t3[5] * t5[10] - t3[6] * t5[3] -
          t3[6] * t5[13] - t3[10] * t5[5] + t3[11] * t5[4] - t3[13] * t5[6] +
          t3[14] * t5[2] + t3[14] * t5[12],
      t3[0] * t5[6] - t3[2] * t5[4] - t3[3] * t5[5] + t3[4] * t5[2] +
          t3[4] * t5[12] + t3[5] * t5[3] + t3[5] * t5[13] + t3[6] * t5[0] +
          t3[6] * t5[10] - t3[10] * t5[6] + t3[12] * t5[4] + t3[13] * t5[5] -
          t3[14] * t5[1] - t3[14] * t5[11],
      t3[0] * t5[7] + t3[1] * t5[8] + t3[2] * t5[9] + t3[7] * t5[0] -
          t3[7] * t5[10] - t3[8] * t5[1] + t3[8] * t5[11] - t3[9] * t5[2] +
          t3[9] * t5[12] + t3[10] * t5[7] + t3[11] * t5[8] + t3[12] * t5[9] -
          t3[15] * t5[3] + t3[15] * t5[13],
      t3[0] * t5[8] - t3[1] * t5[7] + t3[3] * t5[9] + t3[7] * t5[1] -
          t3[7] * t5[11] + t3[8] * t5[0] - t3[8] * t5[10] - t3[9] * t5[3] +
          t3[9] * t5[13] + t3[10] * t5[8] - t3[11] * t5[7] + t3[13] * t5[9] +
          t3[15] * t5[2] - t3[15] * t5[12],
      t3[0] * t5[9] - t3[2] * t5[7] - t3[3] * t5[8] + t3[7] * t5[2] -
          t3[7] * t5[12] + t3[8] * t5[3] - t3[8] * t5[13] + t3[9] * t5[0] -
          t3[9] * t5[10] + t3[10] * t5[9] - t3[12] * t5[7] - t3[13] * t5[8] -
          t3[15] * t5[1] + t3[15] * t5[11],
      t3[0] * t5[10] - t3[1] * t5[11] - t3[2] * t5[12] - t3[3] * t5[13] -
          t3[4] * t5[7] - t3[5] * t5[8] - t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[0] - t3[11] * t5[1] -
          t3[12] * t5[2] - t3[13] * t5[3],
      t3[0] * t5[11] + t3[1] * t5[10] - t3[2] * t5[13] + t3[3] * t5[12] -
          t3[4] * t5[8] + t3[5] * t5[7] + t3[7] * t5[5] - t3[8] * t5[4] +
          t3[10] * t5[1] + t3[11] * t5[0] - t3[12] * t5[3] + t3[13] * t5[2] -
          t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[12] + t3[1] * t5[13] + t3[2] * t5[10] - t3[3] * t5[11] -
          t3[4] * t5[9] + t3[6] * t5[7] + t3[7] * t5[6] - t3[9] * t5[4] +
          t3[10] * t5[2] + t3[11] * t5[3] + t3[12] * t5[0] - t3[13] * t5[1] +
          t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[13] - t3[1] * t5[12] + t3[2] * t5[11] + t3[3] * t5[10] -
          t3[5] * t5[9] + t3[6] * t5[8] + t3[8] * t5[6] - t3[9] * t5[5] +
          t3[10] * t5[3] - t3[11] * t5[2] + t3[12] * t5[1] + t3[13] * t5[0] -
          t3[14] * t5[7] + t3[15] * t5[4]);
}

template <>
inline Rvd sp(const Rvd& rvda, const Rvd& rvd) {
  const Rvd& t1 = rvd;
  const Rvd& t2 = rvda;
  Rvd t3(t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
             t1[7] * t2[7] - t1[8] * t2[8] - t1[9] * t2[9] - t1[10] * t2[10],
         t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
             t1[7] * t2[8] + t1[8] * t2[7] - t1[9] * t2[10] + t1[10] * t2[9],
         t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
             t1[7] * t2[9] + t1[8] * t2[10] + t1[9] * t2[7] - t1[10] * t2[8],
         t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
             t1[7] * t2[10] - t1[8] * t2[9] + t1[9] * t2[8] + t1[10] * t2[7],
         t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] - t1[3] * t2[11] +
             t1[4] * t2[0] + t1[4] * t2[7] - t1[5] * t2[1] - t1[5] * t2[8] -
             t1[6] * t2[2] - t1[6] * t2[9] - t1[7] * t2[4] - t1[8] * t2[5] -
             t1[9] * t2[6] + t1[10] * t2[11] - t1[11] * t2[3] - t1[11] * t2[10],
         t1[0] * t2[5] - t1[1] * t2[4] + t1[2] * t2[11] + t1[3] * t2[6] +
             t1[4] * t2[1] + t1[4] * t2[8] + t1[5] * t2[0] + t1[5] * t2[7] -
             t1[6] * t2[3] - t1[6] * t2[10] - t1[7] * t2[5] + t1[8] * t2[4] -
             t1[9] * t2[11] - t1[10] * t2[6] + t1[11] * t2[2] + t1[11] * t2[9],
         t1[0] * t2[6] - t1[1] * t2[11] - t1[2] * t2[4] - t1[3] * t2[5] +
             t1[4] * t2[2] + t1[4] * t2[9] + t1[5] * t2[3] + t1[5] * t2[10] +
             t1[6] * t2[0] + t1[6] * t2[7] - t1[7] * t2[6] + t1[8] * t2[11] +
             t1[9] * t2[4] + t1[10] * t2[5] - t1[11] * t2[1] - t1[11] * t2[8],
         t1[0] * t2[7] - t1[1] * t2[8] - t1[2] * t2[9] - t1[3] * t2[10] +
             t1[7] * t2[0] - t1[8] * t2[1] - t1[9] * t2[2] - t1[10] * t2[3],
         t1[0] * t2[8] + t1[1] * t2[7] - t1[2] * t2[10] + t1[3] * t2[9] +
             t1[7] * t2[1] + t1[8] * t2[0] - t1[9] * t2[3] + t1[10] * t2[2],
         t1[0] * t2[9] + t1[1] * t2[10] + t1[2] * t2[7] - t1[3] * t2[8] +
             t1[7] * t2[2] + t1[8] * t2[3] + t1[9] * t2[0] - t1[10] * t2[1],
         t1[0] * t2[10] - t1[1] * t2[9] + t1[2] * t2[8] + t1[3] * t2[7] +
             t1[7] * t2[3] - t1[8] * t2[2] + t1[9] * t2[1] + t1[10] * t2[0],
         t1[0] * t2[11] + t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] +
             t1[4] * t2[3] + t1[4] * t2[10] - t1[5] * t2[2] - t1[5] * t2[9] +
             t1[6] * t2[1] + t1[6] * t2[8] - t1[7] * t2[11] - t1[8] * t2[6] +
             t1[9] * t2[5] - t1[10] * t2[4] + t1[11] * t2[0] + t1[11] * t2[7]);
  const Rvd& t4 = rvd;
  Rvd t5 = reverse(t4);
  return Rvd(
      t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
          t3[7] * t5[7] - t3[8] * t5[8] - t3[9] * t5[9] - t3[10] * t5[10],
      t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
          t3[7] * t5[8] + t3[8] * t5[7] - t3[9] * t5[10] + t3[10] * t5[9],
      t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
          t3[7] * t5[9] + t3[8] * t5[10] + t3[9] * t5[7] - t3[10] * t5[8],
      t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
          t3[7] * t5[10] - t3[8] * t5[9] + t3[9] * t5[8] + t3[10] * t5[7],
      t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] - t3[3] * t5[11] +
          t3[4] * t5[0] + t3[4] * t5[7] - t3[5] * t5[1] - t3[5] * t5[8] -
          t3[6] * t5[2] - t3[6] * t5[9] - t3[7] * t5[4] - t3[8] * t5[5] -
          t3[9] * t5[6] + t3[10] * t5[11] - t3[11] * t5[3] - t3[11] * t5[10],
      t3[0] * t5[5] - t3[1] * t5[4] + t3[2] * t5[11] + t3[3] * t5[6] +
          t3[4] * t5[1] + t3[4] * t5[8] + t3[5] * t5[0] + t3[5] * t5[7] -
          t3[6] * t5[3] - t3[6] * t5[10] - t3[7] * t5[5] + t3[8] * t5[4] -
          t3[9] * t5[11] - t3[10] * t5[6] + t3[11] * t5[2] + t3[11] * t5[9],
      t3[0] * t5[6] - t3[1] * t5[11] - t3[2] * t5[4] - t3[3] * t5[5] +
          t3[4] * t5[2] + t3[4] * t5[9] + t3[5] * t5[3] + t3[5] * t5[10] +
          t3[6] * t5[0] + t3[6] * t5[7] - t3[7] * t5[6] + t3[8] * t5[11] +
          t3[9] * t5[4] + t3[10] * t5[5] - t3[11] * t5[1] - t3[11] * t5[8],
      t3[0] * t5[7] - t3[1] * t5[8] - t3[2] * t5[9] - t3[3] * t5[10] +
          t3[7] * t5[0] - t3[8] * t5[1] - t3[9] * t5[2] - t3[10] * t5[3],
      t3[0] * t5[8] + t3[1] * t5[7] - t3[2] * t5[10] + t3[3] * t5[9] +
          t3[7] * t5[1] + t3[8] * t5[0] - t3[9] * t5[3] + t3[10] * t5[2],
      t3[0] * t5[9] + t3[1] * t5[10] + t3[2] * t5[7] - t3[3] * t5[8] +
          t3[7] * t5[2] + t3[8] * t5[3] + t3[9] * t5[0] - t3[10] * t5[1],
      t3[0] * t5[10] - t3[1] * t5[9] + t3[2] * t5[8] + t3[3] * t5[7] +
          t3[7] * t5[3] - t3[8] * t5[2] + t3[9] * t5[1] + t3[10] * t5[0],
      t3[0] * t5[11] + t3[1] * t5[6] - t3[2] * t5[5] + t3[3] * t5[4] +
          t3[4] * t5[3] + t3[4] * t5[10] - t3[5] * t5[2] - t3[5] * t5[9] +
          t3[6] * t5[1] + t3[6] * t5[8] - t3[7] * t5[11] - t3[8] * t5[6] +
          t3[9] * t5[5] - t3[10] * t5[4] + t3[11] * t5[0] + t3[11] * t5[7]);
}

template <>
inline Tst sp(const Tst& tsta, const Tst& tst) {
  const Tst& t1 = tst;
  const Tst& t2 = tsta;
  Mtt t3(
      t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
          t1[4] * t2[7] + t1[5] * t2[8] + t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[10] - t1[11] * t2[11] -
          t1[12] * t2[12] - t1[13] * t2[13],
      t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
          t1[4] * t2[8] - t1[5] * t2[7] + t1[7] * t2[5] - t1[8] * t2[4] +
          t1[9] * t2[14] + t1[10] * t2[11] + t1[11] * t2[10] - t1[12] * t2[13] +
          t1[13] * t2[12] + t1[14] * t2[9],
      t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
          t1[4] * t2[9] - t1[6] * t2[7] + t1[7] * t2[6] - t1[8] * t2[14] -
          t1[9] * t2[4] + t1[10] * t2[12] + t1[11] * t2[13] + t1[12] * t2[10] -
          t1[13] * t2[11] - t1[14] * t2[8],
      t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
          t1[5] * t2[9] - t1[6] * t2[8] + t1[7] * t2[14] + t1[8] * t2[6] -
          t1[9] * t2[5] + t1[10] * t2[13] - t1[11] * t2[12] + t1[12] * t2[11] +
          t1[13] * t2[10] + t1[14] * t2[7],
      t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] - t1[3] * t2[14] +
          t1[4] * t2[0] + t1[4] * t2[10] - t1[5] * t2[1] - t1[5] * t2[11] -
          t1[6] * t2[2] - t1[6] * t2[12] - t1[10] * t2[4] - t1[11] * t2[5] -
          t1[12] * t2[6] + t1[13] * t2[14] - t1[14] * t2[3] - t1[14] * t2[13],
      t1[0] * t2[5] - t1[1] * t2[4] + t1[2] * t2[14] + t1[3] * t2[6] +
          t1[4] * t2[1] + t1[4] * t2[11] + t1[5] * t2[0] + t1[5] * t2[10] -
          t1[6] * t2[3] - t1[6] * t2[13] - t1[10] * t2[5] + t1[11] * t2[4] -
          t1[12] * t2[14] - t1[13] * t2[6] + t1[14] * t2[2] + t1[14] * t2[12],
      t1[0] * t2[6] - t1[1] * t2[14] - t1[2] * t2[4] - t1[3] * t2[5] +
          t1[4] * t2[2] + t1[4] * t2[12] + t1[5] * t2[3] + t1[5] * t2[13] +
          t1[6] * t2[0] + t1[6] * t2[10] - t1[10] * t2[6] + t1[11] * t2[14] +
          t1[12] * t2[4] + t1[13] * t2[5] - t1[14] * t2[1] - t1[14] * t2[11],
      t1[0] * t2[7] + t1[1] * t2[8] + t1[2] * t2[9] + t1[7] * t2[0] -
          t1[7] * t2[10] - t1[8] * t2[1] + t1[8] * t2[11] - t1[9] * t2[2] +
          t1[9] * t2[12] + t1[10] * t2[7] + t1[11] * t2[8] + t1[12] * t2[9],
      t1[0] * t2[8] - t1[1] * t2[7] + t1[3] * t2[9] + t1[7] * t2[1] -
          t1[7] * t2[11] + t1[8] * t2[0] - t1[8] * t2[10] - t1[9] * t2[3] +
          t1[9] * t2[13] + t1[10] * t2[8] - t1[11] * t2[7] + t1[13] * t2[9],
      t1[0] * t2[9] - t1[2] * t2[7] - t1[3] * t2[8] + t1[7] * t2[2] -
          t1[7] * t2[12] + t1[8] * t2[3] - t1[8] * t2[13] + t1[9] * t2[0] -
          t1[9] * t2[10] + t1[10] * t2[9] - t1[12] * t2[7] - t1[13] * t2[8],
      t1[0] * t2[10] - t1[1] * t2[11] - t1[2] * t2[12] - t1[3] * t2[13] -
          t1[4] * t2[7] - t1[5] * t2[8] - t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[0] - t1[11] * t2[1] -
          t1[12] * t2[2] - t1[13] * t2[3],
      t1[0] * t2[11] + t1[1] * t2[10] - t1[2] * t2[13] + t1[3] * t2[12] -
          t1[4] * t2[8] + t1[5] * t2[7] + t1[7] * t2[5] - t1[8] * t2[4] +
          t1[9] * t2[14] + t1[10] * t2[1] + t1[11] * t2[0] - t1[12] * t2[3] +
          t1[13] * t2[2] - t1[14] * t2[9],
      t1[0] * t2[12] + t1[1] * t2[13] + t1[2] * t2[10] - t1[3] * t2[11] -
          t1[4] * t2[9] + t1[6] * t2[7] + t1[7] * t2[6] - t1[8] * t2[14] -
          t1[9] * t2[4] + t1[10] * t2[2] + t1[11] * t2[3] + t1[12] * t2[0] -
          t1[13] * t2[1] + t1[14] * t2[8],
      t1[0] * t2[13] - t1[1] * t2[12] + t1[2] * t2[11] + t1[3] * t2[10] -
          t1[5] * t2[9] + t1[6] * t2[8] + t1[7] * t2[14] + t1[8] * t2[6] -
          t1[9] * t2[5] + t1[10] * t2[3] - t1[11] * t2[2] + t1[12] * t2[1] +
          t1[13] * t2[0] - t1[14] * t2[7],
      t1[0] * t2[14] + t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] +
          t1[4] * t2[3] + t1[4] * t2[13] - t1[5] * t2[2] - t1[5] * t2[12] +
          t1[6] * t2[1] + t1[6] * t2[11] - t1[10] * t2[14] - t1[11] * t2[6] +
          t1[12] * t2[5] - t1[13] * t2[4] + t1[14] * t2[0] + t1[14] * t2[10],
      t1[1] * t2[9] - t1[2] * t2[8] + t1[3] * t2[7] + t1[7] * t2[3] -
          t1[7] * t2[13] - t1[8] * t2[2] + t1[8] * t2[12] + t1[9] * t2[1] -
          t1[9] * t2[11] + t1[11] * t2[9] - t1[12] * t2[8] + t1[13] * t2[7]);
  const Tst& t4 = tst;
  Tst t5 = reverse(t4);
  return Tst(
      t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
          t3[4] * t5[7] + t3[5] * t5[8] + t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[10] - t3[11] * t5[11] -
          t3[12] * t5[12] - t3[13] * t5[13] - t3[15] * t5[14],
      t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
          t3[4] * t5[8] - t3[5] * t5[7] + t3[7] * t5[5] - t3[8] * t5[4] +
          t3[9] * t5[14] + t3[10] * t5[11] + t3[11] * t5[10] - t3[12] * t5[13] +
          t3[13] * t5[12] + t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
          t3[4] * t5[9] - t3[6] * t5[7] + t3[7] * t5[6] - t3[8] * t5[14] -
          t3[9] * t5[4] + t3[10] * t5[12] + t3[11] * t5[13] + t3[12] * t5[10] -
          t3[13] * t5[11] - t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
          t3[5] * t5[9] - t3[6] * t5[8] + t3[7] * t5[14] + t3[8] * t5[6] -
          t3[9] * t5[5] + t3[10] * t5[13] - t3[11] * t5[12] + t3[12] * t5[11] +
          t3[13] * t5[10] + t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] - t3[3] * t5[14] +
          t3[4] * t5[0] + t3[4] * t5[10] - t3[5] * t5[1] - t3[5] * t5[11] -
          t3[6] * t5[2] - t3[6] * t5[12] - t3[10] * t5[4] - t3[11] * t5[5] -
          t3[12] * t5[6] + t3[13] * t5[14] - t3[14] * t5[3] - t3[14] * t5[13],
      t3[0] * t5[5] - t3[1] * t5[4] + t3[2] * t5[14] + t3[3] * t5[6] +
          t3[4] * t5[1] + t3[4] * t5[11] + t3[5] * t5[0] + t3[5] * t5[10] -
          t3[6] * t5[3] - t3[6] * t5[13] - t3[10] * t5[5] + t3[11] * t5[4] -
          t3[12] * t5[14] - t3[13] * t5[6] + t3[14] * t5[2] + t3[14] * t5[12],
      t3[0] * t5[6] - t3[1] * t5[14] - t3[2] * t5[4] - t3[3] * t5[5] +
          t3[4] * t5[2] + t3[4] * t5[12] + t3[5] * t5[3] + t3[5] * t5[13] +
          t3[6] * t5[0] + t3[6] * t5[10] - t3[10] * t5[6] + t3[11] * t5[14] +
          t3[12] * t5[4] + t3[13] * t5[5] - t3[14] * t5[1] - t3[14] * t5[11],
      t3[0] * t5[7] + t3[1] * t5[8] + t3[2] * t5[9] + t3[7] * t5[0] -
          t3[7] * t5[10] - t3[8] * t5[1] + t3[8] * t5[11] - t3[9] * t5[2] +
          t3[9] * t5[12] + t3[10] * t5[7] + t3[11] * t5[8] + t3[12] * t5[9] -
          t3[15] * t5[3] + t3[15] * t5[13],
      t3[0] * t5[8] - t3[1] * t5[7] + t3[3] * t5[9] + t3[7] * t5[1] -
          t3[7] * t5[11] + t3[8] * t5[0] - t3[8] * t5[10] - t3[9] * t5[3] +
          t3[9] * t5[13] + t3[10] * t5[8] - t3[11] * t5[7] + t3[13] * t5[9] +
          t3[15] * t5[2] - t3[15] * t5[12],
      t3[0] * t5[9] - t3[2] * t5[7] - t3[3] * t5[8] + t3[7] * t5[2] -
          t3[7] * t5[12] + t3[8] * t5[3] - t3[8] * t5[13] + t3[9] * t5[0] -
          t3[9] * t5[10] + t3[10] * t5[9] - t3[12] * t5[7] - t3[13] * t5[8] -
          t3[15] * t5[1] + t3[15] * t5[11],
      t3[0] * t5[10] - t3[1] * t5[11] - t3[2] * t5[12] - t3[3] * t5[13] -
          t3[4] * t5[7] - t3[5] * t5[8] - t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[0] - t3[11] * t5[1] -
          t3[12] * t5[2] - t3[13] * t5[3] - t3[15] * t5[14],
      t3[0] * t5[11] + t3[1] * t5[10] - t3[2] * t5[13] + t3[3] * t5[12] -
          t3[4] * t5[8] + t3[5] * t5[7] + t3[7] * t5[5] - t3[8] * t5[4] +
          t3[9] * t5[14] + t3[10] * t5[1] + t3[11] * t5[0] - t3[12] * t5[3] +
          t3[13] * t5[2] - t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[12] + t3[1] * t5[13] + t3[2] * t5[10] - t3[3] * t5[11] -
          t3[4] * t5[9] + t3[6] * t5[7] + t3[7] * t5[6] - t3[8] * t5[14] -
          t3[9] * t5[4] + t3[10] * t5[2] + t3[11] * t5[3] + t3[12] * t5[0] -
          t3[13] * t5[1] + t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[13] - t3[1] * t5[12] + t3[2] * t5[11] + t3[3] * t5[10] -
          t3[5] * t5[9] + t3[6] * t5[8] + t3[7] * t5[14] + t3[8] * t5[6] -
          t3[9] * t5[5] + t3[10] * t5[3] - t3[11] * t5[2] + t3[12] * t5[1] +
          t3[13] * t5[0] - t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[14] + t3[1] * t5[6] - t3[2] * t5[5] + t3[3] * t5[4] +
          t3[4] * t5[3] + t3[4] * t5[13] - t3[5] * t5[2] - t3[5] * t5[12] +
          t3[6] * t5[1] + t3[6] * t5[11] - t3[10] * t5[14] - t3[11] * t5[6] +
          t3[12] * t5[5] - t3[13] * t5[4] + t3[14] * t5[0] + t3[14] * t5[10]);
}

template <>
inline Tvt sp(const Tvt& tvta, const Tvt& tvt) {
  const Tvt& t1 = tvt;
  const Tvt& t2 = tvta;
  Mtt t3(
      t1[0] * t2[0] - t1[1] * t2[1] - t1[2] * t2[2] - t1[3] * t2[3] +
          t1[4] * t2[7] + t1[5] * t2[8] + t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[10] - t1[11] * t2[11] -
          t1[12] * t2[12] - t1[13] * t2[13],
      t1[0] * t2[1] + t1[1] * t2[0] - t1[2] * t2[3] + t1[3] * t2[2] +
          t1[4] * t2[8] - t1[5] * t2[7] + t1[6] * t2[14] + t1[7] * t2[5] -
          t1[8] * t2[4] + t1[10] * t2[11] + t1[11] * t2[10] - t1[12] * t2[13] +
          t1[13] * t2[12] + t1[14] * t2[6],
      t1[0] * t2[2] + t1[1] * t2[3] + t1[2] * t2[0] - t1[3] * t2[1] +
          t1[4] * t2[9] - t1[5] * t2[14] - t1[6] * t2[7] + t1[7] * t2[6] -
          t1[9] * t2[4] + t1[10] * t2[12] + t1[11] * t2[13] + t1[12] * t2[10] -
          t1[13] * t2[11] - t1[14] * t2[5],
      t1[0] * t2[3] - t1[1] * t2[2] + t1[2] * t2[1] + t1[3] * t2[0] +
          t1[4] * t2[14] + t1[5] * t2[9] - t1[6] * t2[8] + t1[8] * t2[6] -
          t1[9] * t2[5] + t1[10] * t2[13] - t1[11] * t2[12] + t1[12] * t2[11] +
          t1[13] * t2[10] + t1[14] * t2[4],
      t1[0] * t2[4] + t1[1] * t2[5] + t1[2] * t2[6] + t1[4] * t2[0] +
          t1[4] * t2[10] - t1[5] * t2[1] - t1[5] * t2[11] - t1[6] * t2[2] -
          t1[6] * t2[12] - t1[10] * t2[4] - t1[11] * t2[5] - t1[12] * t2[6],
      t1[0] * t2[5] - t1[1] * t2[4] + t1[3] * t2[6] + t1[4] * t2[1] +
          t1[4] * t2[11] + t1[5] * t2[0] + t1[5] * t2[10] - t1[6] * t2[3] -
          t1[6] * t2[13] - t1[10] * t2[5] + t1[11] * t2[4] - t1[13] * t2[6],
      t1[0] * t2[6] - t1[2] * t2[4] - t1[3] * t2[5] + t1[4] * t2[2] +
          t1[4] * t2[12] + t1[5] * t2[3] + t1[5] * t2[13] + t1[6] * t2[0] +
          t1[6] * t2[10] - t1[10] * t2[6] + t1[12] * t2[4] + t1[13] * t2[5],
      t1[0] * t2[7] + t1[1] * t2[8] + t1[2] * t2[9] - t1[3] * t2[14] +
          t1[7] * t2[0] - t1[7] * t2[10] - t1[8] * t2[1] + t1[8] * t2[11] -
          t1[9] * t2[2] + t1[9] * t2[12] + t1[10] * t2[7] + t1[11] * t2[8] +
          t1[12] * t2[9] - t1[13] * t2[14] - t1[14] * t2[3] + t1[14] * t2[13],
      t1[0] * t2[8] - t1[1] * t2[7] + t1[2] * t2[14] + t1[3] * t2[9] +
          t1[7] * t2[1] - t1[7] * t2[11] + t1[8] * t2[0] - t1[8] * t2[10] -
          t1[9] * t2[3] + t1[9] * t2[13] + t1[10] * t2[8] - t1[11] * t2[7] +
          t1[12] * t2[14] + t1[13] * t2[9] + t1[14] * t2[2] - t1[14] * t2[12],
      t1[0] * t2[9] - t1[1] * t2[14] - t1[2] * t2[7] - t1[3] * t2[8] +
          t1[7] * t2[2] - t1[7] * t2[12] + t1[8] * t2[3] - t1[8] * t2[13] +
          t1[9] * t2[0] - t1[9] * t2[10] + t1[10] * t2[9] - t1[11] * t2[14] -
          t1[12] * t2[7] - t1[13] * t2[8] - t1[14] * t2[1] + t1[14] * t2[11],
      t1[0] * t2[10] - t1[1] * t2[11] - t1[2] * t2[12] - t1[3] * t2[13] -
          t1[4] * t2[7] - t1[5] * t2[8] - t1[6] * t2[9] + t1[7] * t2[4] +
          t1[8] * t2[5] + t1[9] * t2[6] + t1[10] * t2[0] - t1[11] * t2[1] -
          t1[12] * t2[2] - t1[13] * t2[3],
      t1[0] * t2[11] + t1[1] * t2[10] - t1[2] * t2[13] + t1[3] * t2[12] -
          t1[4] * t2[8] + t1[5] * t2[7] - t1[6] * t2[14] + t1[7] * t2[5] -
          t1[8] * t2[4] + t1[10] * t2[1] + t1[11] * t2[0] - t1[12] * t2[3] +
          t1[13] * t2[2] + t1[14] * t2[6],
      t1[0] * t2[12] + t1[1] * t2[13] + t1[2] * t2[10] - t1[3] * t2[11] -
          t1[4] * t2[9] + t1[5] * t2[14] + t1[6] * t2[7] + t1[7] * t2[6] -
          t1[9] * t2[4] + t1[10] * t2[2] + t1[11] * t2[3] + t1[12] * t2[0] -
          t1[13] * t2[1] - t1[14] * t2[5],
      t1[0] * t2[13] - t1[1] * t2[12] + t1[2] * t2[11] + t1[3] * t2[10] -
          t1[4] * t2[14] - t1[5] * t2[9] + t1[6] * t2[8] + t1[8] * t2[6] -
          t1[9] * t2[5] + t1[10] * t2[3] - t1[11] * t2[2] + t1[12] * t2[1] +
          t1[13] * t2[0] + t1[14] * t2[4],
      t1[1] * t2[6] - t1[2] * t2[5] + t1[3] * t2[4] + t1[4] * t2[3] +
          t1[4] * t2[13] - t1[5] * t2[2] - t1[5] * t2[12] + t1[6] * t2[1] +
          t1[6] * t2[11] - t1[11] * t2[6] + t1[12] * t2[5] - t1[13] * t2[4],
      t1[0] * t2[14] + t1[1] * t2[9] - t1[2] * t2[8] + t1[3] * t2[7] +
          t1[7] * t2[3] - t1[7] * t2[13] - t1[8] * t2[2] + t1[8] * t2[12] +
          t1[9] * t2[1] - t1[9] * t2[11] + t1[10] * t2[14] + t1[11] * t2[9] -
          t1[12] * t2[8] + t1[13] * t2[7] + t1[14] * t2[0] - t1[14] * t2[10]);
  const Tvt& t4 = tvt;
  Tvt t5 = reverse(t4);
  return Tvt(
      t3[0] * t5[0] - t3[1] * t5[1] - t3[2] * t5[2] - t3[3] * t5[3] +
          t3[4] * t5[7] + t3[5] * t5[8] + t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[10] - t3[11] * t5[11] -
          t3[12] * t5[12] - t3[13] * t5[13] - t3[14] * t5[14],
      t3[0] * t5[1] + t3[1] * t5[0] - t3[2] * t5[3] + t3[3] * t5[2] +
          t3[4] * t5[8] - t3[5] * t5[7] + t3[6] * t5[14] + t3[7] * t5[5] -
          t3[8] * t5[4] + t3[10] * t5[11] + t3[11] * t5[10] - t3[12] * t5[13] +
          t3[13] * t5[12] + t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[2] + t3[1] * t5[3] + t3[2] * t5[0] - t3[3] * t5[1] +
          t3[4] * t5[9] - t3[5] * t5[14] - t3[6] * t5[7] + t3[7] * t5[6] -
          t3[9] * t5[4] + t3[10] * t5[12] + t3[11] * t5[13] + t3[12] * t5[10] -
          t3[13] * t5[11] - t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[3] - t3[1] * t5[2] + t3[2] * t5[1] + t3[3] * t5[0] +
          t3[4] * t5[14] + t3[5] * t5[9] - t3[6] * t5[8] + t3[8] * t5[6] -
          t3[9] * t5[5] + t3[10] * t5[13] - t3[11] * t5[12] + t3[12] * t5[11] +
          t3[13] * t5[10] + t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[4] + t3[1] * t5[5] + t3[2] * t5[6] + t3[4] * t5[0] +
          t3[4] * t5[10] - t3[5] * t5[1] - t3[5] * t5[11] - t3[6] * t5[2] -
          t3[6] * t5[12] - t3[10] * t5[4] - t3[11] * t5[5] - t3[12] * t5[6] -
          t3[14] * t5[3] - t3[14] * t5[13],
      t3[0] * t5[5] - t3[1] * t5[4] + t3[3] * t5[6] + t3[4] * t5[1] +
          t3[4] * t5[11] + t3[5] * t5[0] + t3[5] * t5[10] - t3[6] * t5[3] -
          t3[6] * t5[13] - t3[10] * t5[5] + t3[11] * t5[4] - t3[13] * t5[6] +
          t3[14] * t5[2] + t3[14] * t5[12],
      t3[0] * t5[6] - t3[2] * t5[4] - t3[3] * t5[5] + t3[4] * t5[2] +
          t3[4] * t5[12] + t3[5] * t5[3] + t3[5] * t5[13] + t3[6] * t5[0] +
          t3[6] * t5[10] - t3[10] * t5[6] + t3[12] * t5[4] + t3[13] * t5[5] -
          t3[14] * t5[1] - t3[14] * t5[11],
      t3[0] * t5[7] + t3[1] * t5[8] + t3[2] * t5[9] - t3[3] * t5[14] +
          t3[7] * t5[0] - t3[7] * t5[10] - t3[8] * t5[1] + t3[8] * t5[11] -
          t3[9] * t5[2] + t3[9] * t5[12] + t3[10] * t5[7] + t3[11] * t5[8] +
          t3[12] * t5[9] - t3[13] * t5[14] - t3[15] * t5[3] + t3[15] * t5[13],
      t3[0] * t5[8] - t3[1] * t5[7] + t3[2] * t5[14] + t3[3] * t5[9] +
          t3[7] * t5[1] - t3[7] * t5[11] + t3[8] * t5[0] - t3[8] * t5[10] -
          t3[9] * t5[3] + t3[9] * t5[13] + t3[10] * t5[8] - t3[11] * t5[7] +
          t3[12] * t5[14] + t3[13] * t5[9] + t3[15] * t5[2] - t3[15] * t5[12],
      t3[0] * t5[9] - t3[1] * t5[14] - t3[2] * t5[7] - t3[3] * t5[8] +
          t3[7] * t5[2] - t3[7] * t5[12] + t3[8] * t5[3] - t3[8] * t5[13] +
          t3[9] * t5[0] - t3[9] * t5[10] + t3[10] * t5[9] - t3[11] * t5[14] -
          t3[12] * t5[7] - t3[13] * t5[8] - t3[15] * t5[1] + t3[15] * t5[11],
      t3[0] * t5[10] - t3[1] * t5[11] - t3[2] * t5[12] - t3[3] * t5[13] -
          t3[4] * t5[7] - t3[5] * t5[8] - t3[6] * t5[9] + t3[7] * t5[4] +
          t3[8] * t5[5] + t3[9] * t5[6] + t3[10] * t5[0] - t3[11] * t5[1] -
          t3[12] * t5[2] - t3[13] * t5[3] + t3[14] * t5[14],
      t3[0] * t5[11] + t3[1] * t5[10] - t3[2] * t5[13] + t3[3] * t5[12] -
          t3[4] * t5[8] + t3[5] * t5[7] - t3[6] * t5[14] + t3[7] * t5[5] -
          t3[8] * t5[4] + t3[10] * t5[1] + t3[11] * t5[0] - t3[12] * t5[3] +
          t3[13] * t5[2] - t3[14] * t5[9] + t3[15] * t5[6],
      t3[0] * t5[12] + t3[1] * t5[13] + t3[2] * t5[10] - t3[3] * t5[11] -
          t3[4] * t5[9] + t3[5] * t5[14] + t3[6] * t5[7] + t3[7] * t5[6] -
          t3[9] * t5[4] + t3[10] * t5[2] + t3[11] * t5[3] + t3[12] * t5[0] -
          t3[13] * t5[1] + t3[14] * t5[8] - t3[15] * t5[5],
      t3[0] * t5[13] - t3[1] * t5[12] + t3[2] * t5[11] + t3[3] * t5[10] -
          t3[4] * t5[14] - t3[5] * t5[9] + t3[6] * t5[8] + t3[8] * t5[6] -
          t3[9] * t5[5] + t3[10] * t5[3] - t3[11] * t5[2] + t3[12] * t5[1] +
          t3[13] * t5[0] - t3[14] * t5[7] + t3[15] * t5[4],
      t3[0] * t5[14] + t3[1] * t5[9] - t3[2] * t5[8] + t3[3] * t5[7] +
          t3[7] * t5[3] - t3[7] * t5[13] - t3[8] * t5[2] + t3[8] * t5[12] +
          t3[9] * t5[1] - t3[9] * t5[11] + t3[10] * t5[14] + t3[11] * t5[9] -
          t3[12] * t5[8] + t3[13] * t5[7] + t3[15] * t5[0] - t3[15] * t5[10]);
}

template <>
inline Vec re(const Vec& veca, const Vec& vec) {
  const Vec& t1 = vec;
  const Vec& t2 = veca;
  Vec t3 = involute(t2);
  Rot t4(t1[0] * t3[0] + t1[1] * t3[1] + t1[2] * t3[2],
         t1[0] * t3[1] - t1[1] * t3[0], t1[0] * t3[2] - t1[2] * t3[0],
         t1[1] * t3[2] - t1[2] * t3[1]);
  const Vec& t5 = vec;
  Vec t6 = reverse(t5);
  return Vec(t4[0] * t6[0] + t4[1] * t6[1] + t4[2] * t6[2],
             t4[0] * t6[1] - t4[1] * t6[0] + t4[3] * t6[2],
             t4[0] * t6[2] - t4[2] * t6[0] - t4[3] * t6[1]);
}

template <>
inline Dlp re(const Dlp& dlpa, const Dlp& dlp) {
  const Dlp& t1 = dlp;
  const Dlp& t2 = dlpa;
  Dlp t3 = involute(t2);
  Pln_Pln t4(t1[0] * t3[0] + t1[1] * t3[1] + t1[2] * t3[2],
             t1[0] * t3[1] - t1[1] * t3[0], t1[0] * t3[2] - t1[2] * t3[0],
             t1[1] * t3[2] - t1[2] * t3[1], t1[0] * t3[3] - t1[3] * t3[0],
             t1[1] * t3[3] - t1[3] * t3[1], t1[2] * t3[3] - t1[3] * t3[2]);
  const Dlp& t5 = dlp;
  Dlp t6 = reverse(t5);
  return Dlp(t4[0] * t6[0] + t4[1] * t6[1] + t4[2] * t6[2],
             t4[0] * t6[1] - t4[1] * t6[0] + t4[3] * t6[2],
             t4[0] * t6[2] - t4[2] * t6[0] - t4[3] * t6[1],
             t4[0] * t6[3] - t4[4] * t6[0] - t4[5] * t6[1] - t4[6] * t6[2]);
}

template <>
inline Pln re(const Pln& plna, const Pln& pln) {
  const Pln& t1 = pln;
  const Pln& t2 = plna;
  Pln t3 = involute(t2);
  Pln_Pln t4(-t1[0] * t3[0] - t1[1] * t3[1] - t1[2] * t3[2],
             -t1[1] * t3[2] + t1[2] * t3[1], t1[0] * t3[2] - t1[2] * t3[0],
             -t1[0] * t3[1] + t1[1] * t3[0], -t1[2] * t3[3] + t1[3] * t3[2],
             t1[1] * t3[3] - t1[3] * t3[1], -t1[0] * t3[3] + t1[3] * t3[0]);
  const Pln& t5 = pln;
  Pln t6 = reverse(t5);
  return Pln(t4[0] * t6[0] - t4[2] * t6[2] + t4[3] * t6[1],
             t4[0] * t6[1] + t4[1] * t6[2] - t4[3] * t6[0],
             t4[0] * t6[2] - t4[1] * t6[1] + t4[2] * t6[0],
             t4[0] * t6[3] - t4[4] * t6[2] + t4[5] * t6[1] - t4[6] * t6[0]);
}

template <>
inline Dll re(const Dll& dlla, const Dll& dll) {
  const Dll& t1 = dll;
  const Dll& t2 = dlla;
  Dll t3 = involute(t2);
  Mot t4(-t1[0] * t3[0] - t1[1] * t3[1] - t1[2] * t3[2],
         -t1[1] * t3[2] + t1[2] * t3[1], t1[0] * t3[2] - t1[2] * t3[0],
         -t1[0] * t3[1] + t1[1] * t3[0],
         t1[0] * t3[4] + t1[1] * t3[5] - t1[4] * t3[0] - t1[5] * t3[1],
         -t1[0] * t3[3] + t1[2] * t3[5] + t1[3] * t3[0] - t1[5] * t3[2],
         -t1[1] * t3[3] - t1[2] * t3[4] + t1[3] * t3[1] + t1[4] * t3[2],
         t1[0] * t3[5] - t1[1] * t3[4] + t1[2] * t3[3] + t1[3] * t3[2] -
             t1[4] * t3[1] + t1[5] * t3[0]);
  const Dll& t5 = dll;
  Dll t6 = reverse(t5);
  return Dll(t4[0] * t6[0] - t4[2] * t6[2] + t4[3] * t6[1],
             t4[0] * t6[1] + t4[1] * t6[2] - t4[3] * t6[0],
             t4[0] * t6[2] - t4[1] * t6[1] + t4[2] * t6[0],
             t4[0] * t6[3] + t4[1] * t6[4] + t4[2] * t6[5] - t4[5] * t6[0] -
                 t4[6] * t6[1] - t4[7] * t6[2],
             t4[0] * t6[4] - t4[1] * t6[3] + t4[3] * t6[5] + t4[4] * t6[0] -
                 t4[6] * t6[2] + t4[7] * t6[1],
             t4[0] * t6[5] - t4[2] * t6[3] - t4[3] * t6[4] + t4[4] * t6[1] +
                 t4[5] * t6[2] - t4[7] * t6[0]);
}

template <>
inline Lin re(const Lin& lina, const Lin& lin) {
  const Lin& t1 = lin;
  const Lin& t2 = lina;
  Lin t3 = involute(t2);
  Mot t4(t1[3] * t3[3] + t1[4] * t3[4] + t1[5] * t3[5],
         t1[3] * t3[4] - t1[4] * t3[3], t1[3] * t3[5] - t1[5] * t3[3],
         t1[4] * t3[5] - t1[5] * t3[4],
         t1[0] * t3[4] + t1[1] * t3[5] - t1[4] * t3[0] - t1[5] * t3[1],
         -t1[0] * t3[3] + t1[2] * t3[5] + t1[3] * t3[0] - t1[5] * t3[2],
         -t1[1] * t3[3] - t1[2] * t3[4] + t1[3] * t3[1] + t1[4] * t3[2],
         t1[0] * t3[5] - t1[1] * t3[4] + t1[2] * t3[3] + t1[3] * t3[2] -
             t1[4] * t3[1] + t1[5] * t3[0]);
  const Lin& t5 = lin;
  Lin t6 = reverse(t5);
  return Lin(t4[0] * t6[0] - t4[2] * t6[2] + t4[3] * t6[1] + t4[4] * t6[4] -
                 t4[5] * t6[3] + t4[7] * t6[5],
             t4[0] * t6[1] + t4[1] * t6[2] - t4[3] * t6[0] + t4[4] * t6[5] -
                 t4[6] * t6[3] - t4[7] * t6[4],
             t4[0] * t6[2] - t4[1] * t6[1] + t4[2] * t6[0] + t4[5] * t6[5] -
                 t4[6] * t6[4] + t4[7] * t6[3],
             t4[0] * t6[3] + t4[1] * t6[4] + t4[2] * t6[5],
             t4[0] * t6[4] - t4[1] * t6[3] + t4[3] * t6[5],
             t4[0] * t6[5] - t4[2] * t6[3] - t4[3] * t6[4]);
}

template <>
inline Pnt re(const Pnt& pnta, const Pnt& pnt) {
  const Pnt& t1 = pnt;
  const Pnt& t2 = pnta;
  Pnt t3 = involute(t2);
  Bst t4(t1[0] * t3[0] + t1[1] * t3[1] + t1[2] * t3[2] - t1[3] * t3[4] -
             t1[4] * t3[3],
         t1[0] * t3[1] - t1[1] * t3[0], t1[0] * t3[2] - t1[2] * t3[0],
         t1[1] * t3[2] - t1[2] * t3[1], t1[0] * t3[3] - t1[3] * t3[0],
         t1[1] * t3[3] - t1[3] * t3[1], t1[2] * t3[3] - t1[3] * t3[2],
         t1[0] * t3[4] - t1[4] * t3[0], t1[1] * t3[4] - t1[4] * t3[1],
         t1[2] * t3[4] - t1[4] * t3[2], t1[3] * t3[4] - t1[4] * t3[3]);
  const Pnt& t5 = pnt;
  Pnt t6 = reverse(t5);
  return Pnt(t4[0] * t6[0] + t4[1] * t6[1] + t4[2] * t6[2] - t4[4] * t6[4] -
                 t4[7] * t6[3],
             t4[0] * t6[1] - t4[1] * t6[0] + t4[3] * t6[2] - t4[5] * t6[4] -
                 t4[8] * t6[3],
             t4[0] * t6[2] - t4[2] * t6[0] - t4[3] * t6[1] - t4[6] * t6[4] -
                 t4[9] * t6[3],
             t4[0] * t6[3] - t4[4] * t6[0] - t4[5] * t6[1] - t4[6] * t6[2] -
                 t4[10] * t6[3],
             t4[0] * t6[4] - t4[7] * t6[0] - t4[8] * t6[1] - t4[9] * t6[2] +
                 t4[10] * t6[4]);
}

template <>
inline Par re(const Par& para, const Par& par) {
  const Par& t1 = par;
  const Par& t2 = para;
  Par t3 = involute(t2);
  Mtt t4(-t1[0] * t3[0] - t1[1] * t3[1] - t1[2] * t3[2] + t1[3] * t3[6] +
             t1[4] * t3[7] + t1[5] * t3[8] + t1[6] * t3[3] + t1[7] * t3[4] +
             t1[8] * t3[5] + t1[9] * t3[9],
         -t1[1] * t3[2] + t1[2] * t3[1] + t1[3] * t3[7] - t1[4] * t3[6] +
             t1[6] * t3[4] - t1[7] * t3[3],
         t1[0] * t3[2] - t1[2] * t3[0] + t1[3] * t3[8] - t1[5] * t3[6] +
             t1[6] * t3[5] - t1[8] * t3[3],
         -t1[0] * t3[1] + t1[1] * t3[0] + t1[4] * t3[8] - t1[5] * t3[7] +
             t1[7] * t3[5] - t1[8] * t3[4],
         t1[0] * t3[4] + t1[1] * t3[5] + t1[3] * t3[9] - t1[4] * t3[0] -
             t1[5] * t3[1] - t1[9] * t3[3],
         -t1[0] * t3[3] + t1[2] * t3[5] + t1[3] * t3[0] + t1[4] * t3[9] -
             t1[5] * t3[2] - t1[9] * t3[4],
         -t1[1] * t3[3] - t1[2] * t3[4] + t1[3] * t3[1] + t1[4] * t3[2] +
             t1[5] * t3[9] - t1[9] * t3[5],
         t1[0] * t3[7] + t1[1] * t3[8] - t1[6] * t3[9] - t1[7] * t3[0] -
             t1[8] * t3[1] + t1[9] * t3[6],
         -t1[0] * t3[6] + t1[2] * t3[8] + t1[6] * t3[0] - t1[7] * t3[9] -
             t1[8] * t3[2] + t1[9] * t3[7],
         -t1[1] * t3[6] - t1[2] * t3[7] + t1[6] * t3[1] + t1[7] * t3[2] -
             t1[8] * t3[9] + t1[9] * t3[8],
         -t1[3] * t3[6] - t1[4] * t3[7] - t1[5] * t3[8] + t1[6] * t3[3] +
             t1[7] * t3[4] + t1[8] * t3[5],
         t1[0] * t3[9] - t1[3] * t3[7] + t1[4] * t3[6] + t1[6] * t3[4] -
             t1[7] * t3[3] + t1[9] * t3[0],
         t1[1] * t3[9] - t1[3] * t3[8] + t1[5] * t3[6] + t1[6] * t3[5] -
             t1[8] * t3[3] + t1[9] * t3[1],
         t1[2] * t3[9] - t1[4] * t3[8] + t1[5] * t3[7] + t1[7] * t3[5] -
             t1[8] * t3[4] + t1[9] * t3[2],
         t1[0] * t3[5] - t1[1] * t3[4] + t1[2] * t3[3] + t1[3] * t3[2] -
             t1[4] * t3[1] + t1[5] * t3[0],
         t1[0] * t3[8] - t1[1] * t3[7] + t1[2] * t3[6] + t1[6] * t3[2] -
             t1[7] * t3[1] + t1[8] * t3[0]);
  const Par& t5 = par;
  Par t6 = reverse(t5);
  return Par(t4[0] * t6[0] - t4[2] * t6[2] + t4[3] * t6[1] + t4[4] * t6[7] -
                 t4[5] * t6[6] + t4[7] * t6[4] - t4[8] * t6[3] +
                 t4[11] * t6[9] + t4[14] * t6[8] + t4[15] * t6[5],
             t4[0] * t6[1] + t4[1] * t6[2] - t4[3] * t6[0] + t4[4] * t6[8] -
                 t4[6] * t6[6] + t4[7] * t6[5] - t4[9] * t6[3] +
                 t4[12] * t6[9] - t4[14] * t6[7] - t4[15] * t6[4],
             t4[0] * t6[2] - t4[1] * t6[1] + t4[2] * t6[0] + t4[5] * t6[8] -
                 t4[6] * t6[7] + t4[8] * t6[5] - t4[9] * t6[4] +
                 t4[13] * t6[9] + t4[14] * t6[6] + t4[15] * t6[3],
             t4[0] * t6[3] + t4[1] * t6[4] + t4[2] * t6[5] + t4[4] * t6[9] -
                 t4[5] * t6[0] - t4[6] * t6[1] - t4[10] * t6[3] -
                 t4[11] * t6[4] - t4[12] * t6[5] - t4[14] * t6[2],
             t4[0] * t6[4] - t4[1] * t6[3] + t4[3] * t6[5] + t4[4] * t6[0] +
                 t4[5] * t6[9] - t4[6] * t6[2] - t4[10] * t6[4] +
                 t4[11] * t6[3] - t4[13] * t6[5] + t4[14] * t6[1],
             t4[0] * t6[5] - t4[2] * t6[3] - t4[3] * t6[4] + t4[4] * t6[1] +
                 t4[5] * t6[2] + t4[6] * t6[9] - t4[10] * t6[5] +
                 t4[12] * t6[3] + t4[13] * t6[4] - t4[14] * t6[0],
             t4[0] * t6[6] + t4[1] * t6[7] + t4[2] * t6[8] - t4[7] * t6[9] -
                 t4[8] * t6[0] - t4[9] * t6[1] + t4[10] * t6[6] +
                 t4[11] * t6[7] + t4[12] * t6[8] - t4[15] * t6[2],
             t4[0] * t6[7] - t4[1] * t6[6] + t4[3] * t6[8] + t4[7] * t6[0] -
                 t4[8] * t6[9] - t4[9] * t6[2] + t4[10] * t6[7] -
                 t4[11] * t6[6] + t4[13] * t6[8] + t4[15] * t6[1],
             t4[0] * t6[8] - t4[2] * t6[6] - t4[3] * t6[7] + t4[7] * t6[1] +
                 t4[8] * t6[2] - t4[9] * t6[9] + t4[10] * t6[8] -
                 t4[12] * t6[6] - t4[13] * t6[7] - t4[15] * t6[0],
             t4[0] * t6[9] - t4[4] * t6[6] - t4[5] * t6[7] - t4[6] * t6[8] +
                 t4[7] * t6[3] + t4[8] * t6[4] + t4[9] * t6[5] -
                 t4[11] * t6[0] - t4[12] * t6[1] - t4[13] * t6[2]);
}

template <>
inline Cir re(const Cir& cira, const Cir& cir) {
  const Cir& t1 = cir;
  const Cir& t2 = cira;
  Cir t3 = involute(t2);
  Mtt t4(t1[0] * t3[3] + t1[1] * t3[4] + t1[2] * t3[5] + t1[3] * t3[0] +
             t1[4] * t3[1] + t1[5] * t3[2] + t1[6] * t3[6] + t1[7] * t3[7] +
             t1[8] * t3[8] - t1[9] * t3[9],
         t1[1] * t3[5] - t1[2] * t3[4] + t1[4] * t3[2] - t1[5] * t3[1] +
             t1[6] * t3[7] - t1[7] * t3[6],
         -t1[0] * t3[5] + t1[2] * t3[3] - t1[3] * t3[2] + t1[5] * t3[0] +
             t1[6] * t3[8] - t1[8] * t3[6],
         t1[0] * t3[4] - t1[1] * t3[3] + t1[3] * t3[1] - t1[4] * t3[0] +
             t1[7] * t3[8] - t1[8] * t3[7],
         -t1[0] * t3[7] - t1[1] * t3[8] + t1[2] * t3[9] + t1[7] * t3[0] +
             t1[8] * t3[1] - t1[9] * t3[2],
         t1[0] * t3[6] - t1[1] * t3[9] - t1[2] * t3[8] - t1[6] * t3[0] +
             t1[8] * t3[2] + t1[9] * t3[1],
         t1[0] * t3[9] + t1[1] * t3[6] + t1[2] * t3[7] - t1[6] * t3[1] -
             t1[7] * t3[2] - t1[9] * t3[0],
         t1[3] * t3[7] + t1[4] * t3[8] + t1[5] * t3[9] - t1[7] * t3[3] -
             t1[8] * t3[4] - t1[9] * t3[5],
         -t1[3] * t3[6] - t1[4] * t3[9] + t1[5] * t3[8] + t1[6] * t3[3] -
             t1[8] * t3[5] + t1[9] * t3[4],
         t1[3] * t3[9] - t1[4] * t3[6] - t1[5] * t3[7] + t1[6] * t3[4] +
             t1[7] * t3[5] - t1[9] * t3[3],
         -t1[0] * t3[3] - t1[1] * t3[4] - t1[2] * t3[5] + t1[3] * t3[0] +
             t1[4] * t3[1] + t1[5] * t3[2],
         -t1[1] * t3[5] + t1[2] * t3[4] + t1[4] * t3[2] - t1[5] * t3[1] +
             t1[8] * t3[9] + t1[9] * t3[8],
         t1[0] * t3[5] - t1[2] * t3[3] - t1[3] * t3[2] + t1[5] * t3[0] -
             t1[7] * t3[9] - t1[9] * t3[7],
         -t1[0] * t3[4] + t1[1] * t3[3] + t1[3] * t3[1] - t1[4] * t3[0] +
             t1[6] * t3[9] + t1[9] * t3[6],
         -t1[0] * t3[8] + t1[1] * t3[7] - t1[2] * t3[6] - t1[6] * t3[2] +
             t1[7] * t3[1] - t1[8] * t3[0],
         t1[3] * t3[8] - t1[4] * t3[7] + t1[5] * t3[6] + t1[6] * t3[5] -
             t1[7] * t3[4] + t1[8] * t3[3]);
  const Cir& t5 = cir;
  Cir t6 = reverse(t5);
  return Cir(t4[0] * t6[0] - t4[2] * t6[2] + t4[3] * t6[1] - t4[4] * t6[7] +
                 t4[5] * t6[6] - t4[6] * t6[9] - t4[10] * t6[0] +
                 t4[12] * t6[2] - t4[13] * t6[1] - t4[14] * t6[8],
             t4[0] * t6[1] + t4[1] * t6[2] - t4[3] * t6[0] - t4[4] * t6[8] +
                 t4[5] * t6[9] + t4[6] * t6[6] - t4[10] * t6[1] -
                 t4[11] * t6[2] + t4[13] * t6[0] + t4[14] * t6[7],
             t4[0] * t6[2] - t4[1] * t6[1] + t4[2] * t6[0] - t4[4] * t6[9] -
                 t4[5] * t6[8] + t4[6] * t6[7] - t4[10] * t6[2] +
                 t4[11] * t6[1] - t4[12] * t6[0] - t4[14] * t6[6],
             t4[0] * t6[3] - t4[2] * t6[5] + t4[3] * t6[4] + t4[7] * t6[7] -
                 t4[8] * t6[6] - t4[9] * t6[9] + t4[10] * t6[3] -
                 t4[12] * t6[5] + t4[13] * t6[4] + t4[15] * t6[8],
             t4[0] * t6[4] + t4[1] * t6[5] - t4[3] * t6[3] + t4[7] * t6[8] +
                 t4[8] * t6[9] - t4[9] * t6[6] + t4[10] * t6[4] +
                 t4[11] * t6[5] - t4[13] * t6[3] - t4[15] * t6[7],
             t4[0] * t6[5] - t4[1] * t6[4] + t4[2] * t6[3] - t4[7] * t6[9] +
                 t4[8] * t6[8] - t4[9] * t6[7] + t4[10] * t6[5] -
                 t4[11] * t6[4] + t4[12] * t6[3] + t4[15] * t6[6],
             t4[0] * t6[6] + t4[1] * t6[7] + t4[2] * t6[8] - t4[5] * t6[3] -
                 t4[6] * t6[4] + t4[8] * t6[0] + t4[9] * t6[1] -
                 t4[13] * t6[9] - t4[14] * t6[5] + t4[15] * t6[2],
             t4[0] * t6[7] - t4[1] * t6[6] + t4[3] * t6[8] + t4[4] * t6[3] -
                 t4[6] * t6[5] - t4[7] * t6[0] + t4[9] * t6[2] +
                 t4[12] * t6[9] + t4[14] * t6[4] - t4[15] * t6[1],
             t4[0] * t6[8] - t4[2] * t6[6] - t4[3] * t6[7] + t4[4] * t6[4] +
                 t4[5] * t6[5] - t4[7] * t6[1] - t4[8] * t6[2] -
                 t4[11] * t6[9] - t4[14] * t6[3] + t4[15] * t6[0],
             t4[0] * t6[9] - t4[4] * t6[5] + t4[5] * t6[4] - t4[6] * t6[3] -
                 t4[7] * t6[2] + t4[8] * t6[1] - t4[9] * t6[0] +
                 t4[11] * t6[8] - t4[12] * t6[7] + t4[13] * t6[6]);
}

template <>
inline Sph re(const Sph& spha, const Sph& sph) {
  const Sph& t1 = sph;
  const Sph& t2 = spha;
  Sph t3 = involute(t2);
  Bst t4(-t1[0] * t3[0] - t1[1] * t3[1] - t1[2] * t3[2] - t1[3] * t3[4] -
             t1[4] * t3[3],
         -t1[1] * t3[2] + t1[2] * t3[1], t1[0] * t3[2] - t1[2] * t3[0],
         -t1[0] * t3[1] + t1[1] * t3[0], t1[2] * t3[3] - t1[3] * t3[2],
         -t1[1] * t3[3] + t1[3] * t3[1], t1[0] * t3[3] - t1[3] * t3[0],
         -t1[2] * t3[4] + t1[4] * t3[2], t1[1] * t3[4] - t1[4] * t3[1],
         -t1[0] * t3[4] + t1[4] * t3[0], t1[3] * t3[4] - t1[4] * t3[3]);
  const Sph& t5 = sph;
  Sph t6 = reverse(t5);
  return Sph(t4[0] * t6[0] - t4[2] * t6[2] + t4[3] * t6[1] - t4[6] * t6[4] +
                 t4[9] * t6[3],
             t4[0] * t6[1] + t4[1] * t6[2] - t4[3] * t6[0] + t4[5] * t6[4] -
                 t4[8] * t6[3],
             t4[0] * t6[2] - t4[1] * t6[1] + t4[2] * t6[0] - t4[4] * t6[4] +
                 t4[7] * t6[3],
             t4[0] * t6[3] + t4[4] * t6[2] - t4[5] * t6[1] + t4[6] * t6[0] -
                 t4[10] * t6[3],
             t4[0] * t6[4] - t4[7] * t6[2] + t4[8] * t6[1] - t4[9] * t6[0] +
                 t4[10] * t6[4]);
}

}  // namespace vsr
#endif
